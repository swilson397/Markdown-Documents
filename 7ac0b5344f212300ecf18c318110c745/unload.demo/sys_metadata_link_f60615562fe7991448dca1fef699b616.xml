<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>unload.demo</directory>
        <documentkey>c7434cf6dbed3300d0cb5385ca96197f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="x_58056_md_docs_markdown_source"&gt;
    &lt;x_58056_md_docs_markdown_source action="INSERT_OR_UPDATE"&gt;
        &lt;abstract_syntax_tree&gt;{
	"type": "Program",
	"body": [
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "Identifier",
					"name": "Markdown"
				},
				"right": {
					"type": "CallExpression",
					"callee": {
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "Identifier",
							"name": "Class"
						},
						"property": {
							"type": "Identifier",
							"name": "create"
						}
					},
					"arguments": []
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "DEBUG"
					}
				},
				"right": {
					"type": "Literal",
					"value": true,
					"raw": "true"
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "REFRESH"
					}
				},
				"right": {
					"type": "Literal",
					"value": "refresh",
					"raw": "\"refresh\""
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "ACTION_EVENT"
					}
				},
				"right": {
					"type": "Literal",
					"value": "x_58056_md_docs.md_docs.action",
					"raw": "\"x_58056_md_docs.md_docs.action\""
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "startRefreshSourceAction"
					}
				},
				"right": {
					"type": "FunctionExpression",
					"id": null,
					"params": [
						{
							"type": "Identifier",
							"name": "versionID"
						},
						{
							"type": "Identifier",
							"name": "projectType"
						},
						{
							"type": "Identifier",
							"name": "customAppID"
						},
						{
							"type": "Identifier",
							"name": "updateSets"
						}
					],
					"body": {
						"type": "BlockStatement",
						"body": [
							{
								"type": "VariableDeclaration",
								"declarations": [
									{
										"type": "VariableDeclarator",
										"id": {
											"type": "Identifier",
											"name": "details"
										},
										"init": {
											"type": "ObjectExpression",
											"properties": [
												{
													"type": "Property",
													"key": {
														"type": "Identifier",
														"name": "versionID"
													},
													"computed": false,
													"value": {
														"type": "Identifier",
														"name": "versionID"
													},
													"kind": "init",
													"method": false,
													"shorthand": false
												},
												{
													"type": "Property",
													"key": {
														"type": "Identifier",
														"name": "projectType"
													},
													"computed": false,
													"value": {
														"type": "Identifier",
														"name": "projectType"
													},
													"kind": "init",
													"method": false,
													"shorthand": false
												},
												{
													"type": "Property",
													"key": {
														"type": "Identifier",
														"name": "customAppID"
													},
													"computed": false,
													"value": {
														"type": "Identifier",
														"name": "customAppID"
													},
													"kind": "init",
													"method": false,
													"shorthand": false
												},
												{
													"type": "Property",
													"key": {
														"type": "Identifier",
														"name": "updateSets"
													},
													"computed": false,
													"value": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "updateSets"
															},
															"property": {
																"type": "Identifier",
																"name": "split"
															}
														},
														"arguments": [
															{
																"type": "Literal",
																"value": ",",
																"raw": "\",\""
															}
														]
													},
													"kind": "init",
													"method": false,
													"shorthand": false
												}
											]
										}
									}
								],
								"kind": "var"
							},
							{
								"type": "ExpressionStatement",
								"expression": {
									"type": "CallExpression",
									"callee": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "Identifier",
											"name": "gs"
										},
										"property": {
											"type": "Identifier",
											"name": "eventQueue"
										}
									},
									"arguments": [
										{
											"type": "MemberExpression",
											"computed": false,
											"object": {
												"type": "Identifier",
												"name": "Markdown"
											},
											"property": {
												"type": "Identifier",
												"name": "ACTION_EVENT"
											}
										},
										{
											"type": "Literal",
											"value": null,
											"raw": "null"
										},
										{
											"type": "MemberExpression",
											"computed": false,
											"object": {
												"type": "Identifier",
												"name": "Markdown"
											},
											"property": {
												"type": "Identifier",
												"name": "REFRESH"
											}
										},
										{
											"type": "CallExpression",
											"callee": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "JSON"
												},
												"property": {
													"type": "Identifier",
													"name": "stringify"
												}
											},
											"arguments": [
												{
													"type": "Identifier",
													"name": "details"
												}
											]
										}
									]
								}
							}
						]
					},
					"generator": false,
					"expression": false,
					"async": false
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "handleMarkdownAction"
					}
				},
				"right": {
					"type": "FunctionExpression",
					"id": null,
					"params": [
						{
							"type": "Identifier",
							"name": "action"
						},
						{
							"type": "Identifier",
							"name": "detailsJSON"
						}
					],
					"body": {
						"type": "BlockStatement",
						"body": [
							{
								"type": "VariableDeclaration",
								"declarations": [
									{
										"type": "VariableDeclarator",
										"id": {
											"type": "Identifier",
											"name": "details"
										},
										"init": {
											"type": "CallExpression",
											"callee": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "JSON"
												},
												"property": {
													"type": "Identifier",
													"name": "parse"
												}
											},
											"arguments": [
												{
													"type": "Identifier",
													"name": "detailsJSON"
												}
											]
										}
									}
								],
								"kind": "var"
							},
							{
								"type": "IfStatement",
								"test": {
									"type": "BinaryExpression",
									"operator": "==",
									"left": {
										"type": "Identifier",
										"name": "action"
									},
									"right": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "Identifier",
											"name": "Markdown"
										},
										"property": {
											"type": "Identifier",
											"name": "REFRESH"
										}
									}
								},
								"consequent": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "Markdown"
														},
														"arguments": []
													},
													"property": {
														"type": "Identifier",
														"name": "refreshArtifacts"
													}
												},
												"arguments": [
													{
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "details"
														},
														"property": {
															"type": "Identifier",
															"name": "versionID"
														}
													},
													{
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "details"
														},
														"property": {
															"type": "Identifier",
															"name": "projectType"
														}
													},
													{
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "details"
														},
														"property": {
															"type": "Identifier",
															"name": "customAppID"
														}
													},
													{
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "details"
														},
														"property": {
															"type": "Identifier",
															"name": "updateSets"
														}
													}
												]
											}
										}
									]
								},
								"alternate": null
							}
						]
					},
					"generator": false,
					"expression": false,
					"async": false
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "Markdown"
					},
					"property": {
						"type": "Identifier",
						"name": "prototype"
					}
				},
				"right": {
					"type": "ObjectExpression",
					"properties": [
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "initialize"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "ThisExpression"
													},
													"property": {
														"type": "Identifier",
														"name": "maxImageBytes"
													}
												},
												"right": {
													"type": "BinaryExpression",
													"operator": "*",
													"left": {
														"type": "BinaryExpression",
														"operator": "*",
														"left": {
															"type": "Literal",
															"value": 1,
															"raw": "1"
														},
														"right": {
															"type": "Literal",
															"value": 1024,
															"raw": "1024"
														}
													},
													"right": {
														"type": "Literal",
														"value": 1024,
														"raw": "1024"
													}
												}
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getAttachment"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "gr"
									},
									{
										"type": "Identifier",
										"name": "fileName"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "attGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "sys_attachment",
																"raw": "\"sys_attachment\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "attGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "table_name",
														"raw": "\"table_name\""
													},
													{
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gr"
															},
															"property": {
																"type": "Identifier",
																"name": "getRecordClassName"
															}
														},
														"arguments": []
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "attGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "table_sys_id",
														"raw": "\"table_sys_id\""
													},
													{
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gr"
															},
															"property": {
																"type": "Identifier",
																"name": "getUniqueValue"
															}
														},
														"arguments": []
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "attGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "file_name",
														"raw": "\"file_name\""
													},
													{
														"type": "Identifier",
														"name": "fileName"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "attGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "attGR"
													},
													"property": {
														"type": "Identifier",
														"name": "next"
													}
												},
												"arguments": []
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Identifier",
															"name": "attGR"
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Literal",
												"value": null,
												"raw": "null"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getImageUrl"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "attachmentSysId"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "attachmentSysId"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Literal",
															"value": "",
															"raw": "\"\""
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "attGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "sys_attachment",
																"raw": "\"sys_attachment\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "attGR"
														},
														"property": {
															"type": "Identifier",
															"name": "get"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "attachmentSysId"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Literal",
															"value": "",
															"raw": "\"\""
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "base64Image"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "Identifier",
															"name": "String"
														},
														"arguments": [
															{
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "NewExpression",
																		"callee": {
																			"type": "Identifier",
																			"name": "GlideSysAttachment"
																		},
																		"arguments": []
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "getContentBase64"
																	}
																},
																"arguments": [
																	{
																		"type": "Identifier",
																		"name": "attGR"
																	}
																]
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "imageSize"
													},
													"init": {
														"type": "BinaryExpression",
														"operator": "/",
														"left": {
															"type": "BinaryExpression",
															"operator": "*",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "base64Image"
																},
																"property": {
																	"type": "Identifier",
																	"name": "length"
																}
															},
															"right": {
																"type": "Literal",
																"value": 3,
																"raw": "3"
															}
														},
														"right": {
															"type": "Literal",
															"value": 4,
															"raw": "4"
														}
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "BinaryExpression",
												"operator": "&amp;gt;",
												"left": {
													"type": "Identifier",
													"name": "imageSize"
												},
												"right": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "ThisExpression"
													},
													"property": {
														"type": "Identifier",
														"name": "maxImageBytes"
													}
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "BinaryExpression",
																		"operator": "+",
																		"left": {
																			"type": "BinaryExpression",
																			"operator": "+",
																			"left": {
																				"type": "Literal",
																				"value": "Image size is greater than ",
																				"raw": "\"Image size is greater than \""
																			},
																			"right": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "ThisExpression"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "maxImageBytes"
																				}
																			}
																		},
																		"right": {
																			"type": "Literal",
																			"value": " for SYSID ",
																			"raw": "\" for SYSID \""
																		}
																	},
																	"right": {
																		"type": "Identifier",
																		"name": "attachmentSysId"
																	}
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Literal",
															"value": "",
															"raw": "\"\""
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "BinaryExpression",
												"operator": "+",
												"left": {
													"type": "Literal",
													"value": "data:image/png;base64,",
													"raw": "\"data:image/png;base64,\""
												},
												"right": {
													"type": "Identifier",
													"name": "base64Image"
												}
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "removeAttachment"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "gr"
									},
									{
										"type": "Identifier",
										"name": "fileName"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "attGR"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getAttachment"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "gr"
															},
															{
																"type": "Identifier",
																"name": "fileName"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "Identifier",
												"name": "attGR"
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "NewExpression",
																	"callee": {
																		"type": "Identifier",
																		"name": "GlideSysAttachment"
																	},
																	"arguments": []
																},
																"property": {
																	"type": "Identifier",
																	"name": "deleteAttachment"
																}
															},
															"arguments": [
																{
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "attGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "getUniqueValue"
																		}
																	},
																	"arguments": []
																}
															]
														}
													}
												]
											},
											"alternate": null
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "createPDFAttachment"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "markdownGR"
									},
									{
										"type": "Identifier",
										"name": "fileName"
									},
									{
										"type": "Identifier",
										"name": "contentType"
									},
									{
										"type": "Identifier",
										"name": "base64Content"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "binData"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "base64Decode"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "base64Content"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "att_id"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "NewExpression",
																"callee": {
																	"type": "Identifier",
																	"name": "GlideSysAttachment"
																},
																"arguments": []
															},
															"property": {
																"type": "Identifier",
																"name": "write"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "markdownGR"
															},
															{
																"type": "Identifier",
																"name": "fileName"
															},
															{
																"type": "Identifier",
																"name": "contentType"
															},
															{
																"type": "Identifier",
																"name": "binData"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "att_id"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "buildMarkdownText"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "sourceGR"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "md"
													},
													"init": {
														"type": "Literal",
														"value": "",
														"raw": "\"\""
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceDetails"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "_getSourceCode"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "sourceGR"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "sourceDetails"
															},
															"property": {
																"type": "Identifier",
																"name": "code"
															}
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "md"
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "NewExpression",
																		"callee": {
																			"type": "Identifier",
																			"name": "MarkDownBuilder"
																		},
																		"arguments": [
																			{
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "sourceDetails"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "name"
																				}
																			},
																			{
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "sourceDetails"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "type"
																				}
																			},
																			{
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "sourceDetails"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "link"
																				}
																			},
																			{
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "sourceDetails"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "description"
																				}
																			},
																			{
																				"type": "Literal",
																				"value": 2,
																				"raw": "2"
																			}
																		]
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "buildMarkdown"
																	}
																},
																"arguments": [
																	{
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceDetails"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "code"
																		}
																	}
																]
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "md"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "generateAbstractSyntaxTree"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "sourceGR"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "ast"
													},
													"init": {
														"type": "Literal",
														"value": "",
														"raw": "\"\""
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceDetails"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "_getSourceCode"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "sourceGR"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "sourceDetails"
															},
															"property": {
																"type": "Identifier",
																"name": "code"
															}
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "ast"
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "esprima"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "parseScript"
																	}
																},
																"arguments": [
																	{
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceDetails"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "code"
																		}
																	}
																]
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_log"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "AST generated.",
																	"raw": "\"AST generated.\""
																}
															]
														}
													}
												]
											},
											"alternate": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logWarning"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "No source code found.",
																	"raw": "\"No source code found.\""
																}
															]
														}
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "jsonStr"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "JSON"
															},
															"property": {
																"type": "Identifier",
																"name": "stringify"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "ast"
															},
															{
																"type": "Literal",
																"value": null,
																"raw": "null"
															},
															{
																"type": "Literal",
																"value": "\t",
																"raw": "'\\t'"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "ThisExpression"
													},
													"property": {
														"type": "Identifier",
														"name": "_log"
													}
												},
												"arguments": [
													{
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "Literal",
															"value": "AST length=",
															"raw": "\"AST length=\""
														},
														"right": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "jsonStr"
															},
															"property": {
																"type": "Identifier",
																"name": "length"
															}
														}
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "jsonStr"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "_getSourceCode"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "sourceGR"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceDetails"
													},
													"init": {
														"type": "ObjectExpression",
														"properties": [
															{
																"type": "Property",
																"key": {
																	"type": "Identifier",
																	"name": "name"
																},
																"computed": false,
																"value": {
																	"type": "Literal",
																	"value": "",
																	"raw": "\"\""
																},
																"kind": "init",
																"method": false,
																"shorthand": false
															},
															{
																"type": "Property",
																"key": {
																	"type": "Identifier",
																	"name": "type"
																},
																"computed": false,
																"value": {
																	"type": "Literal",
																	"value": "",
																	"raw": "\"\""
																},
																"kind": "init",
																"method": false,
																"shorthand": false
															},
															{
																"type": "Property",
																"key": {
																	"type": "Identifier",
																	"name": "link"
																},
																"computed": false,
																"value": {
																	"type": "Literal",
																	"value": "",
																	"raw": "\"\""
																},
																"kind": "init",
																"method": false,
																"shorthand": false
															},
															{
																"type": "Property",
																"key": {
																	"type": "Identifier",
																	"name": "description"
																},
																"computed": false,
																"value": {
																	"type": "Literal",
																	"value": "",
																	"raw": "\"\""
																},
																"kind": "init",
																"method": false,
																"shorthand": false
															},
															{
																"type": "Property",
																"key": {
																	"type": "Identifier",
																	"name": "code"
																},
																"computed": false,
																"value": {
																	"type": "Literal",
																	"value": null,
																	"raw": "null"
																},
																"kind": "init",
																"method": false,
																"shorthand": false
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "BinaryExpression",
												"operator": "==",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "source_type"
													}
												},
												"right": {
													"type": "Literal",
													"value": "Document",
													"raw": "\"Document\""
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "IfStatement",
														"test": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "sourceGR"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "source_id"
																	}
																},
																"property": {
																	"type": "Identifier",
																	"name": "nil"
																}
															},
															"arguments": []
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ReturnStatement",
																	"argument": {
																		"type": "Identifier",
																		"name": "sourceDetails"
																	}
																}
															]
														},
														"alternate": null
													},
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "gr"
																},
																"init": {
																	"type": "NewExpression",
																	"callee": {
																		"type": "Identifier",
																		"name": "GlideRecord"
																	},
																	"arguments": [
																		{
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "source_table"
																			}
																		}
																	]
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "fieldName"
																},
																"init": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "source_script_field"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "toString"
																		}
																	},
																	"arguments": []
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "IfStatement",
														"test": {
															"type": "LogicalExpression",
															"operator": "&amp;amp;&amp;amp;",
															"left": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "gr"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "get"
																	}
																},
																"arguments": [
																	{
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "source_id"
																		}
																	}
																]
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "gr"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "isValidField"
																	}
																},
																"arguments": [
																	{
																		"type": "Identifier",
																		"name": "fieldName"
																	}
																]
															}
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceDetails"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "name"
																			}
																		},
																		"right": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "gr"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "getDisplayValue"
																				}
																			},
																			"arguments": []
																		}
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceDetails"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "type"
																			}
																		},
																		"right": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "gr"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "getLabel"
																				}
																			},
																			"arguments": []
																		}
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceDetails"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "link"
																			}
																		},
																		"right": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "sourceGR"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "markdown_link"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "toString"
																				}
																			},
																			"arguments": []
																		}
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceDetails"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "description"
																			}
																		},
																		"right": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "gr"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "description"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "toString"
																				}
																			},
																			"arguments": []
																		}
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceDetails"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "code"
																			}
																		},
																		"right": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "CallExpression",
																					"callee": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "gr"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "getValue"
																						}
																					},
																					"arguments": [
																						{
																							"type": "Identifier",
																							"name": "fieldName"
																						}
																					]
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "toString"
																				}
																			},
																			"arguments": []
																		}
																	}
																}
															]
														},
														"alternate": null
													}
												]
											},
											"alternate": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceDetails"
																},
																"property": {
																	"type": "Identifier",
																	"name": "name"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "source_name"
																		}
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "toString"
																	}
																},
																"arguments": []
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceDetails"
																},
																"property": {
																	"type": "Identifier",
																	"name": "type"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "source_type"
																		}
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "getDisplayValue"
																	}
																},
																"arguments": []
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceDetails"
																},
																"property": {
																	"type": "Identifier",
																	"name": "link"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "markdown_link"
																		}
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "toString"
																	}
																},
																"arguments": []
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceDetails"
																},
																"property": {
																	"type": "Identifier",
																	"name": "description"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "source_description"
																		}
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "toString"
																	}
																},
																"arguments": []
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceDetails"
																},
																"property": {
																	"type": "Identifier",
																	"name": "code"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "sourceGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "source_text"
																		}
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "toString"
																	}
																},
																"arguments": []
															}
														}
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "sourceDetails"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "refreshArtifacts"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "projectType"
									},
									{
										"type": "Identifier",
										"name": "customAppID"
									},
									{
										"type": "Identifier",
										"name": "updateSets"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "pcdvGR"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getProjectCodeDocumentVersion"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "versionID"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "Identifier",
													"name": "pcdvGR"
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "Literal",
																		"value": "Project Code Document Version not found. ID=",
																		"raw": "\"Project Code Document Version not found. ID=\""
																	},
																	"right": {
																		"type": "Identifier",
																		"name": "versionID"
																	}
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getMarkdownSource"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "versionID"
															},
															{
																"type": "Literal",
																"value": "added_from_application=true",
																"raw": "\"added_from_application=true\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "Identifier",
												"name": "sourceGR"
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "deleteMultiple"
																}
															},
															"arguments": []
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "LogicalExpression",
												"operator": "||",
												"left": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "projectType"
														}
													]
												},
												"right": {
													"type": "BinaryExpression",
													"operator": "==",
													"left": {
														"type": "Identifier",
														"name": "projectType"
													},
													"right": {
														"type": "Literal",
														"value": "Manual",
														"raw": "\"Manual\""
													}
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "BinaryExpression",
												"operator": "==",
												"left": {
													"type": "Identifier",
													"name": "projectType"
												},
												"right": {
													"type": "Literal",
													"value": "Custom application",
													"raw": "\"Custom application\""
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "loadApplicationArtifacts"
																}
															},
															"arguments": [
																{
																	"type": "Identifier",
																	"name": "versionID"
																},
																{
																	"type": "Identifier",
																	"name": "customAppID"
																}
															]
														}
													}
												]
											},
											"alternate": {
												"type": "IfStatement",
												"test": {
													"type": "BinaryExpression",
													"operator": "==",
													"left": {
														"type": "Identifier",
														"name": "projectType"
													},
													"right": {
														"type": "Literal",
														"value": "Update sets",
														"raw": "\"Update sets\""
													}
												},
												"consequent": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ExpressionStatement",
															"expression": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "ThisExpression"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "loadUpdateSetArtifacts"
																	}
																},
																"arguments": [
																	{
																		"type": "Identifier",
																		"name": "versionID"
																	},
																	{
																		"type": "Identifier",
																		"name": "updateSets"
																	}
																]
															}
														}
													]
												},
												"alternate": null
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "pcdvGR"
													},
													"property": {
														"type": "Identifier",
														"name": "source_refreshed"
													}
												},
												"right": {
													"type": "NewExpression",
													"callee": {
														"type": "Identifier",
														"name": "GlideDateTime"
													},
													"arguments": []
												}
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "pcdvGR"
													},
													"property": {
														"type": "Identifier",
														"name": "update"
													}
												},
												"arguments": []
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "removeApplicationArtifacts"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "ThisExpression"
													},
													"property": {
														"type": "Identifier",
														"name": "removeMarkdownSource"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "versionID"
													},
													{
														"type": "Literal",
														"value": "added_from_application=true",
														"raw": "\"added_from_application=true\""
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "loadApplicationArtifacts"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "customAppID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "customAppID"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Application missing",
																	"raw": "\"Application missing\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "appClasses"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "getProperty"
															}
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs.documented_application_classes",
																"raw": "\"x_58056_md_docs.documented_application_classes\""
															},
															{
																"type": "Literal",
																"value": null,
																"raw": "null"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "Identifier",
													"name": "appClasses"
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Application classes property is missing",
																	"raw": "\"Application classes property is missing\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "Identifier",
													"name": "appClasses"
												},
												"right": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "appClasses"
														},
														"property": {
															"type": "Identifier",
															"name": "split"
														}
													},
													"arguments": [
														{
															"type": "Literal",
															"value": ",",
															"raw": "\",\""
														}
													]
												}
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "fields"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getScriptFields"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "appClasses"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "metaGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "sys_metadata",
																"raw": "\"sys_metadata\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "metaGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "sys_scope",
														"raw": "\"sys_scope\""
													},
													{
														"type": "Identifier",
														"name": "customAppID"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "metaGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "sys_class_name",
														"raw": "\"sys_class_name\""
													},
													{
														"type": "Identifier",
														"name": "appClasses"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "metaGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "order"
													},
													"init": {
														"type": "Literal",
														"value": 100,
														"raw": "100"
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "WhileStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "metaGR"
													},
													"property": {
														"type": "Identifier",
														"name": "next"
													}
												},
												"arguments": []
											},
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "table"
																},
																"init": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "metaGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "sys_class_name"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "toString"
																		}
																	},
																	"arguments": []
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "sysID"
																},
																"init": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "metaGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "sys_id"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "toString"
																		}
																	},
																	"arguments": []
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "IfStatement",
														"test": {
															"type": "BinaryExpression",
															"operator": "in",
															"left": {
																"type": "Identifier",
																"name": "table"
															},
															"right": {
																"type": "Identifier",
																"name": "fields"
															}
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "MemberExpression",
																				"computed": true,
																				"object": {
																					"type": "Identifier",
																					"name": "fields"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "table"
																				}
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "forEach"
																			}
																		},
																		"arguments": [
																			{
																				"type": "FunctionExpression",
																				"id": null,
																				"params": [
																					{
																						"type": "Identifier",
																						"name": "field"
																					}
																				],
																				"body": {
																					"type": "BlockStatement",
																					"body": [
																						{
																							"type": "ExpressionStatement",
																							"expression": {
																								"type": "CallExpression",
																								"callee": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "ThisExpression"
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "addMarkdownSource"
																									}
																								},
																								"arguments": [
																									{
																										"type": "Identifier",
																										"name": "versionID"
																									},
																									{
																										"type": "Literal",
																										"value": "Document",
																										"raw": "\"Document\""
																									},
																									{
																										"type": "Identifier",
																										"name": "table"
																									},
																									{
																										"type": "Identifier",
																										"name": "sysID"
																									},
																									{
																										"type": "Identifier",
																										"name": "field"
																									},
																									{
																										"type": "Literal",
																										"value": null,
																										"raw": "null"
																									},
																									{
																										"type": "Literal",
																										"value": null,
																										"raw": "null"
																									},
																									{
																										"type": "Literal",
																										"value": null,
																										"raw": "null"
																									},
																									{
																										"type": "Literal",
																										"value": true,
																										"raw": "true"
																									},
																									{
																										"type": "Identifier",
																										"name": "order"
																									}
																								]
																							}
																						},
																						{
																							"type": "ExpressionStatement",
																							"expression": {
																								"type": "AssignmentExpression",
																								"operator": "+=",
																								"left": {
																									"type": "Identifier",
																									"name": "order"
																								},
																								"right": {
																									"type": "Literal",
																									"value": 100,
																									"raw": "100"
																								}
																							}
																						}
																					]
																				},
																				"generator": false,
																				"expression": false,
																				"async": false
																			},
																			{
																				"type": "ThisExpression"
																			}
																		]
																	}
																}
															]
														},
														"alternate": null
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "loadUpdateSetArtifacts"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "updateSets"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "LogicalExpression",
												"operator": "||",
												"left": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "updateSets"
														}
													]
												},
												"right": {
													"type": "BinaryExpression",
													"operator": "==",
													"left": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "updateSets"
														},
														"property": {
															"type": "Identifier",
															"name": "length"
														}
													},
													"right": {
														"type": "Literal",
														"value": 0,
														"raw": "0"
													}
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Update sets missing",
																	"raw": "\"Update sets missing\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "appClasses"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "getProperty"
															}
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs.documented_application_classes",
																"raw": "\"x_58056_md_docs.documented_application_classes\""
															},
															{
																"type": "Literal",
																"value": null,
																"raw": "null"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "Identifier",
													"name": "appClasses"
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Application classes property is missing",
																	"raw": "\"Application classes property is missing\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "Identifier",
													"name": "appClasses"
												},
												"right": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "appClasses"
														},
														"property": {
															"type": "Identifier",
															"name": "split"
														}
													},
													"arguments": [
														{
															"type": "Literal",
															"value": ",",
															"raw": "\",\""
														}
													]
												}
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "fields"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getScriptFields"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "appClasses"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "suxGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "sys_update_xml",
																"raw": "\"sys_update_xml\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "suxGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "update_set",
														"raw": "\"update_set\""
													},
													{
														"type": "Identifier",
														"name": "updateSets"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "suxGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "action",
														"raw": "\"action\""
													},
													{
														"type": "Literal",
														"value": "INSERT_OR_UPDATE",
														"raw": "\"INSERT_OR_UPDATE\""
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "qc"
													},
													"init": {
														"type": "Literal",
														"value": null,
														"raw": "null"
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "appClasses"
													},
													"property": {
														"type": "Identifier",
														"name": "forEach"
													}
												},
												"arguments": [
													{
														"type": "FunctionExpression",
														"id": null,
														"params": [
															{
																"type": "Identifier",
																"name": "table"
															},
															{
																"type": "Identifier",
																"name": "idx"
															}
														],
														"body": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "IfStatement",
																	"test": {
																		"type": "BinaryExpression",
																		"operator": "==",
																		"left": {
																			"type": "Identifier",
																			"name": "idx"
																		},
																		"right": {
																			"type": "Literal",
																			"value": 0,
																			"raw": "0"
																		}
																	},
																	"consequent": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "AssignmentExpression",
																					"operator": "=",
																					"left": {
																						"type": "Identifier",
																						"name": "qc"
																					},
																					"right": {
																						"type": "CallExpression",
																						"callee": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "suxGR"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "addQuery"
																							}
																						},
																						"arguments": [
																							{
																								"type": "Literal",
																								"value": "name",
																								"raw": "\"name\""
																							},
																							{
																								"type": "Literal",
																								"value": "STARTSWITH",
																								"raw": "\"STARTSWITH\""
																							},
																							{
																								"type": "Identifier",
																								"name": "table"
																							}
																						]
																					}
																				}
																			}
																		]
																	},
																	"alternate": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "CallExpression",
																					"callee": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "qc"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "addOrCondition"
																						}
																					},
																					"arguments": [
																						{
																							"type": "Literal",
																							"value": "name",
																							"raw": "\"name\""
																						},
																						{
																							"type": "Literal",
																							"value": "STARTSWITH",
																							"raw": "\"STARTSWITH\""
																						},
																						{
																							"type": "Identifier",
																							"name": "table"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														},
														"generator": false,
														"expression": false,
														"async": false
													},
													{
														"type": "ThisExpression"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "suxGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "ThisExpression"
													},
													"property": {
														"type": "Identifier",
														"name": "_log"
													}
												},
												"arguments": [
													{
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "BinaryExpression",
															"operator": "+",
															"left": {
																"type": "BinaryExpression",
																"operator": "+",
																"left": {
																	"type": "Literal",
																	"value": "Update xml rows=",
																	"raw": "\"Update xml rows=\""
																},
																"right": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "suxGR"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "getRowCount"
																		}
																	},
																	"arguments": []
																}
															},
															"right": {
																"type": "Literal",
																"value": " query=",
																"raw": "\" query=\""
															}
														},
														"right": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "suxGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "getEncodedQuery"
																}
															},
															"arguments": []
														}
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sources"
													},
													"init": {
														"type": "ObjectExpression",
														"properties": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourcesEntry"
													},
													"init": null
												}
											],
											"kind": "var"
										},
										{
											"type": "WhileStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "suxGR"
													},
													"property": {
														"type": "Identifier",
														"name": "next"
													}
												},
												"arguments": []
											},
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "table"
																},
																"init": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "suxGR"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "name"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "toString"
																				}
																			},
																			"arguments": []
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "substr"
																		}
																	},
																	"arguments": [
																		{
																			"type": "Literal",
																			"value": 0,
																			"raw": "0"
																		},
																		{
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "CallExpression",
																					"callee": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "suxGR"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "name"
																							}
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "toString"
																						}
																					},
																					"arguments": []
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "lastIndexOf"
																				}
																			},
																			"arguments": [
																				{
																					"type": "Literal",
																					"value": "_",
																					"raw": "\"_\""
																				}
																			]
																		}
																	]
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "VariableDeclaration",
														"declarations": [
															{
																"type": "VariableDeclarator",
																"id": {
																	"type": "Identifier",
																	"name": "sysID"
																},
																"init": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "suxGR"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "name"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "toString"
																				}
																			},
																			"arguments": []
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "substr"
																		}
																	},
																	"arguments": [
																		{
																			"type": "BinaryExpression",
																			"operator": "+",
																			"left": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "CallExpression",
																						"callee": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "MemberExpression",
																								"computed": false,
																								"object": {
																									"type": "Identifier",
																									"name": "suxGR"
																								},
																								"property": {
																									"type": "Identifier",
																									"name": "name"
																								}
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "toString"
																							}
																						},
																						"arguments": []
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "lastIndexOf"
																					}
																				},
																				"arguments": [
																					{
																						"type": "Literal",
																						"value": "_",
																						"raw": "\"_\""
																					}
																				]
																			},
																			"right": {
																				"type": "Literal",
																				"value": 1,
																				"raw": "1"
																			}
																		}
																	]
																}
															}
														],
														"kind": "var"
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_log"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "BinaryExpression",
																		"operator": "+",
																		"left": {
																			"type": "BinaryExpression",
																			"operator": "+",
																			"left": {
																				"type": "Literal",
																				"value": "Update xml table=",
																				"raw": "\"Update xml table=\""
																			},
																			"right": {
																				"type": "Identifier",
																				"name": "table"
																			}
																		},
																		"right": {
																			"type": "Literal",
																			"value": " sys_id",
																			"raw": "\" sys_id\""
																		}
																	},
																	"right": {
																		"type": "Identifier",
																		"name": "sysID"
																	}
																}
															]
														}
													},
													{
														"type": "IfStatement",
														"test": {
															"type": "BinaryExpression",
															"operator": "in",
															"left": {
																"type": "Identifier",
																"name": "table"
															},
															"right": {
																"type": "Identifier",
																"name": "fields"
															}
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "IfStatement",
																	"test": {
																		"type": "UnaryExpression",
																		"operator": "!",
																		"argument": {
																			"type": "BinaryExpression",
																			"operator": "in",
																			"left": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "suxGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "name"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			"right": {
																				"type": "Identifier",
																				"name": "sources"
																			}
																		},
																		"prefix": true
																	},
																	"consequent": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "AssignmentExpression",
																					"operator": "=",
																					"left": {
																						"type": "MemberExpression",
																						"computed": true,
																						"object": {
																							"type": "Identifier",
																							"name": "sources"
																						},
																						"property": {
																							"type": "CallExpression",
																							"callee": {
																								"type": "MemberExpression",
																								"computed": false,
																								"object": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "Identifier",
																										"name": "suxGR"
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "name"
																									}
																								},
																								"property": {
																									"type": "Identifier",
																									"name": "toString"
																								}
																							},
																							"arguments": []
																						}
																					},
																					"right": {
																						"type": "ObjectExpression",
																						"properties": [
																							{
																								"type": "Property",
																								"key": {
																									"type": "Identifier",
																									"name": "table"
																								},
																								"computed": false,
																								"value": {
																									"type": "Identifier",
																									"name": "table"
																								},
																								"kind": "init",
																								"method": false,
																								"shorthand": false
																							},
																							{
																								"type": "Property",
																								"key": {
																									"type": "Identifier",
																									"name": "sys_id"
																								},
																								"computed": false,
																								"value": {
																									"type": "Identifier",
																									"name": "sysID"
																								},
																								"kind": "init",
																								"method": false,
																								"shorthand": false
																							},
																							{
																								"type": "Property",
																								"key": {
																									"type": "Identifier",
																									"name": "fields"
																								},
																								"computed": false,
																								"value": {
																									"type": "ArrayExpression",
																									"elements": []
																								},
																								"kind": "init",
																								"method": false,
																								"shorthand": false
																							}
																						]
																					}
																				}
																			}
																		]
																	},
																	"alternate": null
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "Identifier",
																			"name": "sourcesEntry"
																		},
																		"right": {
																			"type": "MemberExpression",
																			"computed": true,
																			"object": {
																				"type": "Identifier",
																				"name": "sources"
																			},
																			"property": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "suxGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "name"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			}
																		}
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "MemberExpression",
																				"computed": true,
																				"object": {
																					"type": "Identifier",
																					"name": "fields"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "table"
																				}
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "forEach"
																			}
																		},
																		"arguments": [
																			{
																				"type": "FunctionExpression",
																				"id": null,
																				"params": [
																					{
																						"type": "Identifier",
																						"name": "field"
																					}
																				],
																				"body": {
																					"type": "BlockStatement",
																					"body": [
																						{
																							"type": "IfStatement",
																							"test": {
																								"type": "BinaryExpression",
																								"operator": "&amp;lt;",
																								"left": {
																									"type": "CallExpression",
																									"callee": {
																										"type": "MemberExpression",
																										"computed": false,
																										"object": {
																											"type": "MemberExpression",
																											"computed": false,
																											"object": {
																												"type": "Identifier",
																												"name": "sourcesEntry"
																											},
																											"property": {
																												"type": "Identifier",
																												"name": "fields"
																											}
																										},
																										"property": {
																											"type": "Identifier",
																											"name": "indexOf"
																										}
																									},
																									"arguments": [
																										{
																											"type": "Identifier",
																											"name": "field"
																										}
																									]
																								},
																								"right": {
																									"type": "Literal",
																									"value": 0,
																									"raw": "0"
																								}
																							},
																							"consequent": {
																								"type": "BlockStatement",
																								"body": [
																									{
																										"type": "ExpressionStatement",
																										"expression": {
																											"type": "CallExpression",
																											"callee": {
																												"type": "MemberExpression",
																												"computed": false,
																												"object": {
																													"type": "MemberExpression",
																													"computed": false,
																													"object": {
																														"type": "Identifier",
																														"name": "sourcesEntry"
																													},
																													"property": {
																														"type": "Identifier",
																														"name": "fields"
																													}
																												},
																												"property": {
																													"type": "Identifier",
																													"name": "push"
																												}
																											},
																											"arguments": [
																												{
																													"type": "Identifier",
																													"name": "field"
																												}
																											]
																										}
																									}
																								]
																							},
																							"alternate": null
																						}
																					]
																				},
																				"generator": false,
																				"expression": false,
																				"async": false
																			},
																			{
																				"type": "ThisExpression"
																			}
																		]
																	}
																}
															]
														},
														"alternate": null
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "order"
													},
													"init": {
														"type": "Literal",
														"value": 100,
														"raw": "100"
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ForInStatement",
											"left": {
												"type": "Identifier",
												"name": "updName"
											},
											"right": {
												"type": "Identifier",
												"name": "sources"
											},
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "sourcesEntry"
															},
															"right": {
																"type": "MemberExpression",
																"computed": true,
																"object": {
																	"type": "Identifier",
																	"name": "sources"
																},
																"property": {
																	"type": "Identifier",
																	"name": "updName"
																}
															}
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "sourcesEntry"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "fields"
																	}
																},
																"property": {
																	"type": "Identifier",
																	"name": "forEach"
																}
															},
															"arguments": [
																{
																	"type": "FunctionExpression",
																	"id": null,
																	"params": [
																		{
																			"type": "Identifier",
																			"name": "field"
																		}
																	],
																	"body": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "CallExpression",
																					"callee": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "ThisExpression"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "addMarkdownSource"
																						}
																					},
																					"arguments": [
																						{
																							"type": "Identifier",
																							"name": "versionID"
																						},
																						{
																							"type": "Literal",
																							"value": "Document",
																							"raw": "\"Document\""
																						},
																						{
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "sourcesEntry"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "table"
																							}
																						},
																						{
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "sourcesEntry"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "sys_id"
																							}
																						},
																						{
																							"type": "Identifier",
																							"name": "field"
																						},
																						{
																							"type": "Literal",
																							"value": null,
																							"raw": "null"
																						},
																						{
																							"type": "Literal",
																							"value": null,
																							"raw": "null"
																						},
																						{
																							"type": "Literal",
																							"value": null,
																							"raw": "null"
																						},
																						{
																							"type": "Literal",
																							"value": true,
																							"raw": "true"
																						},
																						{
																							"type": "Identifier",
																							"name": "order"
																						}
																					]
																				}
																			},
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "AssignmentExpression",
																					"operator": "+=",
																					"left": {
																						"type": "Identifier",
																						"name": "order"
																					},
																					"right": {
																						"type": "Literal",
																						"value": 100,
																						"raw": "100"
																					}
																				}
																			}
																		]
																	},
																	"generator": false,
																	"expression": false,
																	"async": false
																},
																{
																	"type": "ThisExpression"
																}
															]
														}
													}
												]
											},
											"each": false
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getScriptFields"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "tables"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "fields"
													},
													"init": {
														"type": "ObjectExpression",
														"properties": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "dictGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "sys_dictionary",
																"raw": "\"sys_dictionary\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "dictGR"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "addQuery"
																	}
																},
																"arguments": [
																	{
																		"type": "Literal",
																		"value": "internal_type",
																		"raw": "\"internal_type\""
																	},
																	{
																		"type": "Literal",
																		"value": "script_server",
																		"raw": "\"script_server\""
																	}
																]
															},
															"property": {
																"type": "Identifier",
																"name": "addOrCondition"
															}
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "internal_type",
																"raw": "\"internal_type\""
															},
															{
																"type": "Literal",
																"value": "script",
																"raw": "\"script\""
															}
														]
													},
													"property": {
														"type": "Identifier",
														"name": "addOrCondition"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "internal_type",
														"raw": "\"internal_type\""
													},
													{
														"type": "Literal",
														"value": "script_plain",
														"raw": "\"script_plain\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "dictGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "name",
														"raw": "\"name\""
													},
													{
														"type": "Identifier",
														"name": "tables"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "dictGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "WhileStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "dictGR"
													},
													"property": {
														"type": "Identifier",
														"name": "next"
													}
												},
												"arguments": []
											},
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "IfStatement",
														"test": {
															"type": "UnaryExpression",
															"operator": "!",
															"argument": {
																"type": "BinaryExpression",
																"operator": "in",
																"left": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "dictGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "name"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "toString"
																		}
																	},
																	"arguments": []
																},
																"right": {
																	"type": "Identifier",
																	"name": "fields"
																}
															},
															"prefix": true
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "MemberExpression",
																			"computed": true,
																			"object": {
																				"type": "Identifier",
																				"name": "fields"
																			},
																			"property": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "dictGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "name"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			}
																		},
																		"right": {
																			"type": "ArrayExpression",
																			"elements": []
																		}
																	}
																}
															]
														},
														"alternate": null
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "MemberExpression",
																	"computed": true,
																	"object": {
																		"type": "Identifier",
																		"name": "fields"
																	},
																	"property": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "dictGR"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "name"
																				}
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "toString"
																			}
																		},
																		"arguments": []
																	}
																},
																"property": {
																	"type": "Identifier",
																	"name": "push"
																}
															},
															"arguments": [
																{
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "dictGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "element"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "toString"
																		}
																	},
																	"arguments": []
																}
															]
														}
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "fields"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getProjectCodeDocument"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "docID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "pcdGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs_project_code_document",
																"raw": "\"x_58056_md_docs_project_code_document\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "LogicalExpression",
												"operator": "&amp;amp;&amp;amp;",
												"left": {
													"type": "UnaryExpression",
													"operator": "!",
													"argument": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "nil"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "docID"
															}
														]
													},
													"prefix": true
												},
												"right": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "pcdGR"
														},
														"property": {
															"type": "Identifier",
															"name": "get"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "docID"
														}
													]
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Identifier",
															"name": "pcdGR"
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Literal",
												"value": null,
												"raw": "null"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getProjectCodeDocumentVersion"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "pcdvGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs_code_documentation",
																"raw": "\"x_58056_md_docs_code_documentation\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "LogicalExpression",
												"operator": "&amp;amp;&amp;amp;",
												"left": {
													"type": "UnaryExpression",
													"operator": "!",
													"argument": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "nil"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "versionID"
															}
														]
													},
													"prefix": true
												},
												"right": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "pcdvGR"
														},
														"property": {
															"type": "Identifier",
															"name": "get"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "versionID"
														}
													]
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Identifier",
															"name": "pcdvGR"
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Literal",
												"value": null,
												"raw": "null"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getMarkdownSource"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "query"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "versionID"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Version ID missing,",
																	"raw": "\"Version ID missing,\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": {
															"type": "Literal",
															"value": null,
															"raw": "null"
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs_markdown_source",
																"raw": "\"x_58056_md_docs_markdown_source\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "project_code_document_version",
														"raw": "\"project_code_document_version\""
													},
													{
														"type": "Identifier",
														"name": "versionID"
													}
												]
											}
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "query"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "addEncodedQuery"
																}
															},
															"arguments": [
																{
																	"type": "Identifier",
																	"name": "query"
																}
															]
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "sourceGR"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "removeMarkdownSource"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "query"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "versionID"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Version ID missing,",
																	"raw": "\"Version ID missing,\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getMarkdownSource"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "versionID"
															},
															{
																"type": "Identifier",
																"name": "query"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "Identifier",
												"name": "sourceGR"
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "deleteMultiple"
																}
															},
															"arguments": []
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_log"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "getRowCount"
																			}
																		},
																		"arguments": []
																	},
																	"right": {
																		"type": "Literal",
																		"value": " Markdown Source records deleted.",
																		"raw": "\" Markdown Source records deleted.\""
																	}
																}
															]
														}
													}
												]
											},
											"alternate": null
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "copyMarkdownSource"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "newVersionID"
									},
									{
										"type": "Identifier",
										"name": "oldVersionID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getMarkdownSource"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "oldVersionID"
															},
															{
																"type": "Literal",
																"value": null,
																"raw": "null"
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "Identifier",
												"name": "sourceGR"
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "WhileStatement",
														"test": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "next"
																}
															},
															"arguments": []
														},
														"body": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "ThisExpression"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "addMarkdownSource"
																			}
																		},
																		"arguments": [
																			{
																				"type": "Identifier",
																				"name": "newVersionID"
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_type"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_table"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_id"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_script_field"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_name"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_description"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_text"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			{
																				"type": "ConditionalExpression",
																				"test": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "sourceGR"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "added_from_application"
																					}
																				},
																				"consequent": {
																					"type": "Literal",
																					"value": true,
																					"raw": "true"
																				},
																				"alternate": {
																					"type": "Literal",
																					"value": false,
																					"raw": "false"
																				}
																			},
																			{
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "order"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_log"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceGR"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "getRowCount"
																			}
																		},
																		"arguments": []
																	},
																	"right": {
																		"type": "Literal",
																		"value": " Markdown Source records copied.",
																		"raw": "\" Markdown Source records copied.\""
																	}
																}
															]
														}
													}
												]
											},
											"alternate": null
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "addMarkdownSource"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									},
									{
										"type": "Identifier",
										"name": "sourceType"
									},
									{
										"type": "Identifier",
										"name": "sourceTable"
									},
									{
										"type": "Identifier",
										"name": "sourceID"
									},
									{
										"type": "Identifier",
										"name": "sourceScriptField"
									},
									{
										"type": "Identifier",
										"name": "sourceName"
									},
									{
										"type": "Identifier",
										"name": "sourceDescription"
									},
									{
										"type": "Identifier",
										"name": "sourceText"
									},
									{
										"type": "Identifier",
										"name": "addedFromApp"
									},
									{
										"type": "Identifier",
										"name": "order"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "versionID"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Version ID is missing",
																	"raw": "\"Version ID is missing\""
																}
															]
														}
													},
													{
														"type": "ReturnStatement",
														"argument": null
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "sourceType"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "sourceType"
															},
															"right": {
																"type": "Literal",
																"value": "Document",
																"raw": "\"Document\""
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "LogicalExpression",
												"operator": "||",
												"left": {
													"type": "LogicalExpression",
													"operator": "||",
													"left": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "nil"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "sourceTable"
															}
														]
													},
													"right": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "gs"
															},
															"property": {
																"type": "Identifier",
																"name": "nil"
															}
														},
														"arguments": [
															{
																"type": "Identifier",
																"name": "sourceID"
															}
														]
													}
												},
												"right": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceScriptField"
														}
													]
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "IfStatement",
														"test": {
															"type": "LogicalExpression",
															"operator": "&amp;amp;&amp;amp;",
															"left": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "gs"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "nil"
																	}
																},
																"arguments": [
																	{
																		"type": "Identifier",
																		"name": "sourceName"
																	}
																]
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "gs"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "nil"
																	}
																},
																"arguments": [
																	{
																		"type": "Identifier",
																		"name": "sourceText"
																	}
																]
															}
														},
														"consequent": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "ThisExpression"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "_logError"
																			}
																		},
																		"arguments": [
																			{
																				"type": "Literal",
																				"value": "Required attributes missing",
																				"raw": "\"Required attributes missing\""
																			}
																		]
																	}
																},
																{
																	"type": "ReturnStatement",
																	"argument": null
																}
															]
														},
														"alternate": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "AssignmentExpression",
																		"operator": "=",
																		"left": {
																			"type": "Identifier",
																			"name": "addedFromApp"
																		},
																		"right": {
																			"type": "Literal",
																			"value": false,
																			"raw": "false"
																		}
																	}
																}
															]
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "addedFromApp"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "addedFromApp"
															},
															"right": {
																"type": "Literal",
																"value": false,
																"raw": "false"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "nil"
													}
												},
												"arguments": [
													{
														"type": "Identifier",
														"name": "order"
													}
												]
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "order"
															},
															"right": {
																"type": "Literal",
																"value": 100,
																"raw": "100"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs_markdown_source",
																"raw": "\"x_58056_md_docs_markdown_source\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "initialize"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "project_code_document_version"
													}
												},
												"right": {
													"type": "Identifier",
													"name": "versionID"
												}
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "source_type"
													}
												},
												"right": {
													"type": "Identifier",
													"name": "sourceType"
												}
											}
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceTable"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_table"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceTable"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceID"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_id"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceID"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceScriptField"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_script_field"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceScriptField"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "added_from_application"
													}
												},
												"right": {
													"type": "Identifier",
													"name": "addedFromApp"
												}
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "order"
													}
												},
												"right": {
													"type": "Identifier",
													"name": "order"
												}
											}
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceName"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_name"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceName"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceText"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_text"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceText"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "UnaryExpression",
												"operator": "!",
												"argument": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "gs"
														},
														"property": {
															"type": "Identifier",
															"name": "nil"
														}
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "sourceDescription"
														}
													]
												},
												"prefix": true
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceGR"
																},
																"property": {
																	"type": "Identifier",
																	"name": "source_description"
																}
															},
															"right": {
																"type": "Identifier",
																"name": "sourceDescription"
															}
														}
													}
												]
											},
											"alternate": null
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "insert"
													}
												},
												"arguments": []
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "parseSources"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "docGR"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"init": {
														"type": "ArrayExpression",
														"elements": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "Literal",
															"value": "# &amp;lt;a name=\"top_of_doc\"&amp;gt;&amp;lt;/a&amp;gt; ",
															"raw": "'# &amp;lt;a name=\"top_of_doc\"&amp;gt;&amp;lt;/a&amp;gt; '"
														},
														"right": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "docGR"
															},
															"property": {
																"type": "Identifier",
																"name": "short_description"
															}
														}
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "---",
														"raw": "\"---\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "## Contents",
														"raw": "\"## Contents\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "[//]:# (CONTENTS_START)",
														"raw": "\"[//]:# (CONTENTS_START)\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "[//]:# (CONTENTS_END)",
														"raw": "\"[//]:# (CONTENTS_END)\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": " ",
														"raw": "\" \""
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sources"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "ThisExpression"
															},
															"property": {
																"type": "Identifier",
																"name": "getSourceMarkdownText"
															}
														},
														"arguments": [
															{
																"type": "CallExpression",
																"callee": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "docGR"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "getUniqueValue"
																	}
																},
																"arguments": []
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "content"
													},
													"init": {
														"type": "ArrayExpression",
														"elements": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sources"
													},
													"property": {
														"type": "Identifier",
														"name": "forEach"
													}
												},
												"arguments": [
													{
														"type": "FunctionExpression",
														"id": null,
														"params": [
															{
																"type": "Identifier",
																"name": "sourceMD"
															},
															{
																"type": "Identifier",
																"name": "idx"
															}
														],
														"body": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "content"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "push"
																			}
																		},
																		"arguments": [
																			{
																				"type": "ObjectExpression",
																				"properties": [
																					{
																						"type": "Property",
																						"key": {
																							"type": "Identifier",
																							"name": "displayName"
																						},
																						"computed": false,
																						"value": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "sourceMD"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "name"
																							}
																						},
																						"kind": "init",
																						"method": false,
																						"shorthand": false
																					},
																					{
																						"type": "Property",
																						"key": {
																							"type": "Identifier",
																							"name": "link"
																						},
																						"computed": false,
																						"value": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "sourceMD"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "link"
																							}
																						},
																						"kind": "init",
																						"method": false,
																						"shorthand": false
																					}
																				]
																			}
																		]
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceMDText"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "push"
																			}
																		},
																		"arguments": [
																			{
																				"type": "Literal",
																				"value": "---",
																				"raw": "\"---\""
																			}
																		]
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceMDText"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "push"
																			}
																		},
																		"arguments": [
																			{
																				"type": "BinaryExpression",
																				"operator": "+",
																				"left": {
																					"type": "BinaryExpression",
																					"operator": "+",
																					"left": {
																						"type": "Literal",
																						"value": "[//]:# (",
																						"raw": "\"[//]:# (\""
																					},
																					"right": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceMD"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "link"
																						}
																					}
																				},
																				"right": {
																					"type": "Literal",
																					"value": "_START)",
																					"raw": "\"_START)\""
																				}
																			}
																		]
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceMDText"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "push"
																			}
																		},
																		"arguments": [
																			{
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "sourceMD"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "md"
																				}
																			}
																		]
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "sourceMDText"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "push"
																			}
																		},
																		"arguments": [
																			{
																				"type": "BinaryExpression",
																				"operator": "+",
																				"left": {
																					"type": "BinaryExpression",
																					"operator": "+",
																					"left": {
																						"type": "Literal",
																						"value": "[//]:# (",
																						"raw": "\"[//]:# (\""
																					},
																					"right": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceMD"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "link"
																						}
																					}
																				},
																				"right": {
																					"type": "Literal",
																					"value": "_END)",
																					"raw": "\"_END)\""
																				}
																			}
																		]
																	}
																},
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "ThisExpression"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "_addBackToTop"
																			}
																		},
																		"arguments": [
																			{
																				"type": "Identifier",
																				"name": "sourceMDText"
																			}
																		]
																	}
																}
															]
														},
														"generator": false,
														"expression": false,
														"async": false
													},
													{
														"type": "ThisExpression"
													}
												]
											}
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "contentIdx"
													},
													"init": {
														"type": "CallExpression",
														"callee": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "sourceMDText"
															},
															"property": {
																"type": "Identifier",
																"name": "indexOf"
															}
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "[//]:# (CONTENTS_END)",
																"raw": "\"[//]:# (CONTENTS_END)\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "IfStatement",
											"test": {
												"type": "BinaryExpression",
												"operator": "&amp;gt;=",
												"left": {
													"type": "Identifier",
													"name": "contentIdx"
												},
												"right": {
													"type": "Literal",
													"value": 0,
													"raw": "0"
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "content"
																},
																"property": {
																	"type": "Identifier",
																	"name": "forEach"
																}
															},
															"arguments": [
																{
																	"type": "FunctionExpression",
																	"id": null,
																	"params": [
																		{
																			"type": "Identifier",
																			"name": "item"
																		},
																		{
																			"type": "Identifier",
																			"name": "index"
																		}
																	],
																	"body": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "CallExpression",
																					"callee": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceMDText"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "splice"
																						}
																					},
																					"arguments": [
																						{
																							"type": "BinaryExpression",
																							"operator": "+",
																							"left": {
																								"type": "Identifier",
																								"name": "contentIdx"
																							},
																							"right": {
																								"type": "Identifier",
																								"name": "index"
																							}
																						},
																						{
																							"type": "Literal",
																							"value": 0,
																							"raw": "0"
																						},
																						{
																							"type": "BinaryExpression",
																							"operator": "+",
																							"left": {
																								"type": "BinaryExpression",
																								"operator": "+",
																								"left": {
																									"type": "BinaryExpression",
																									"operator": "+",
																									"left": {
																										"type": "BinaryExpression",
																										"operator": "+",
																										"left": {
																											"type": "Literal",
																											"value": "[",
																											"raw": "\"[\""
																										},
																										"right": {
																											"type": "MemberExpression",
																											"computed": false,
																											"object": {
																												"type": "Identifier",
																												"name": "item"
																											},
																											"property": {
																												"type": "Identifier",
																												"name": "displayName"
																											}
																										}
																									},
																									"right": {
																										"type": "Literal",
																										"value": "](#",
																										"raw": "\"](#\""
																									}
																								},
																								"right": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "Identifier",
																										"name": "item"
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "link"
																									}
																								}
																							},
																							"right": {
																								"type": "Literal",
																								"value": ")",
																								"raw": "\")\""
																							}
																						}
																					]
																				}
																			}
																		]
																	},
																	"generator": false,
																	"expression": false,
																	"async": false
																},
																{
																	"type": "ThisExpression"
																}
															]
														}
													}
												]
											},
											"alternate": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "ThisExpression"
																},
																"property": {
																	"type": "Identifier",
																	"name": "_logError"
																}
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "Cannot find Contents section",
																	"raw": "\"Cannot find Contents section\""
																}
															]
														}
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceMDText"
													},
													"property": {
														"type": "Identifier",
														"name": "join"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "\n",
														"raw": "\"\\n\""
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "_addBackToTop"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "sourceArray"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "&amp;lt;br /&amp;gt;",
														"raw": "\"&amp;lt;br /&amp;gt;\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "&amp;lt;span style=\"float: right\"&amp;gt;",
														"raw": "'&amp;lt;span style=\"float: right\"&amp;gt;'"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "",
														"raw": "\"\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "[Back To Top](#top_of_doc)",
														"raw": "\"[Back To Top](#top_of_doc)\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "&amp;lt;/span&amp;gt;",
														"raw": "\"&amp;lt;/span&amp;gt;\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "&amp;lt;span /&amp;gt;",
														"raw": "\"&amp;lt;span /&amp;gt;\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceArray"
													},
													"property": {
														"type": "Identifier",
														"name": "push"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": " ",
														"raw": "\" \""
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "getSourceMarkdownText"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "versionID"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceMD"
													},
													"init": {
														"type": "ArrayExpression",
														"elements": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"init": {
														"type": "NewExpression",
														"callee": {
															"type": "Identifier",
															"name": "GlideRecord"
														},
														"arguments": [
															{
																"type": "Literal",
																"value": "x_58056_md_docs_markdown_source",
																"raw": "\"x_58056_md_docs_markdown_source\""
															}
														]
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "project_code_document_version",
														"raw": "\"project_code_document_version\""
													},
													{
														"type": "Identifier",
														"name": "versionID"
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "addNotNullQuery"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "api_markdown",
														"raw": "\"api_markdown\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "orderBy"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "order",
														"raw": "\"order\""
													}
												]
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "query"
													}
												},
												"arguments": []
											}
										},
										{
											"type": "WhileStatement",
											"test": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "sourceGR"
													},
													"property": {
														"type": "Identifier",
														"name": "next"
													}
												},
												"arguments": []
											},
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "sourceMD"
																},
																"property": {
																	"type": "Identifier",
																	"name": "push"
																}
															},
															"arguments": [
																{
																	"type": "ObjectExpression",
																	"properties": [
																		{
																			"type": "Property",
																			"key": {
																				"type": "Identifier",
																				"name": "name"
																			},
																			"computed": false,
																			"value": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "source_name"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			"kind": "init",
																			"method": false,
																			"shorthand": false
																		},
																		{
																			"type": "Property",
																			"key": {
																				"type": "Identifier",
																				"name": "md"
																			},
																			"computed": false,
																			"value": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "api_markdown"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			"kind": "init",
																			"method": false,
																			"shorthand": false
																		},
																		{
																			"type": "Property",
																			"key": {
																				"type": "Identifier",
																				"name": "link"
																			},
																			"computed": false,
																			"value": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "sourceGR"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "markdown_link"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "toString"
																					}
																				},
																				"arguments": []
																			},
																			"kind": "init",
																			"method": false,
																			"shorthand": false
																		}
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "sourceMD"
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "_logError"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "msg"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "error"
													}
												},
												"arguments": [
													{
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "BinaryExpression",
															"operator": "+",
															"left": {
																"type": "BinaryExpression",
																"operator": "+",
																"left": {
																	"type": "Literal",
																	"value": "[",
																	"raw": "\"[\""
																},
																"right": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "ThisExpression"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "type"
																	}
																}
															},
															"right": {
																"type": "Literal",
																"value": "] ",
																"raw": "\"] \""
															}
														},
														"right": {
															"type": "Identifier",
															"name": "msg"
														}
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "_logWarning"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "msg"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "gs"
													},
													"property": {
														"type": "Identifier",
														"name": "warn"
													}
												},
												"arguments": [
													{
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "BinaryExpression",
															"operator": "+",
															"left": {
																"type": "BinaryExpression",
																"operator": "+",
																"left": {
																	"type": "Literal",
																	"value": "[",
																	"raw": "\"[\""
																},
																"right": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "ThisExpression"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "type"
																	}
																}
															},
															"right": {
																"type": "Literal",
																"value": "] ",
																"raw": "\"] \""
															}
														},
														"right": {
															"type": "Identifier",
															"name": "msg"
														}
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "_log"
							},
							"computed": false,
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [
									{
										"type": "Identifier",
										"name": "msg"
									}
								],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "IfStatement",
											"test": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "Markdown"
												},
												"property": {
													"type": "Identifier",
													"name": "DEBUG"
												}
											},
											"consequent": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "gs"
																},
																"property": {
																	"type": "Identifier",
																	"name": "info"
																}
															},
															"arguments": [
																{
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "BinaryExpression",
																		"operator": "+",
																		"left": {
																			"type": "BinaryExpression",
																			"operator": "+",
																			"left": {
																				"type": "Literal",
																				"value": "[",
																				"raw": "\"[\""
																			},
																			"right": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "ThisExpression"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "type"
																				}
																			}
																		},
																		"right": {
																			"type": "Literal",
																			"value": "] ",
																			"raw": "\"] \""
																		}
																	},
																	"right": {
																		"type": "Identifier",
																		"name": "msg"
																	}
																}
															]
														}
													}
												]
											},
											"alternate": null
										}
									]
								},
								"generator": false,
								"expression": false,
								"async": false
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						},
						{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "type"
							},
							"computed": false,
							"value": {
								"type": "Literal",
								"value": "Markdown",
								"raw": "\"Markdown\""
							},
							"kind": "init",
							"method": false,
							"shorthand": false
						}
					]
				}
			}
		}
	],
	"sourceType": "script"
}&lt;/abstract_syntax_tree&gt;
        &lt;added_manually&gt;false&lt;/added_manually&gt;
        &lt;api_markdown&gt;## &amp;lt;a name="script-include-markdown"&amp;gt;&amp;lt;/a&amp;gt;Markdown
 
### Type: `Script Include`
### Class: `Markdown`
### Constructor
#### `Markdown()`
_Initialize variables_

 
### Static Properties
#### `Markdown.ACTION_EVENT` _= "x_58056_md_docs.md_docs.action"_

---
#### `Markdown.DEBUG` _= true_

---
#### `Markdown.REFRESH` _= "refresh"_

---
#### `Markdown.handleMarkdownAction(action, detailsJSON)`
**Parameters:**

- `action` \*
- `detailsJSON` \*

---
#### `Markdown.startRefreshSourceAction(versionID, projectType, customAppID, updateSets)`
**Parameters:**

- `versionID` string
- `projectType` string
- `customAppID` string
- `updateSets` string

---
### Methods
#### `addMarkdownSource`
**Parameters:**

- `versionID` \*
- `sourceType` \*
- `sourceTable` \*
- `sourceID` \*
- `sourceScriptField` \*
- `sourceName` \*
- `sourceDescription` \*
- `sourceText` \*
- `addedFromApp` \*

---
#### `buildMarkdownText(sourceGR)`
**Parameters:**

- `sourceGR` \*

**Returns:** `*:`

---
#### `copyMarkdownSource(newVersionID, oldVersionID)`
**Parameters:**

- `newVersionID` \*
- `oldVersionID` \*

---
#### `createAttachment(markdownGR, fileName, contentType, content)`
**Parameters:**

- `markdownGR` \*
- `fileName` \*
- `contentType` \*
- `content` \*

**Returns:** `*:`

---
#### `generateAbstractSyntaxTree(sourceGR)`
**Parameters:**

- `sourceGR` \*

**Returns:** `string:`

---
#### `getAttachment(gr, fileName)`
**Parameters:**

- `gr` \*
- `fileName` \*

**Returns:** `*:`

---
#### `getContentCSS(name)`
**Parameters:**

- `name` \*

**Returns:** `*:`

---
#### `getImageUrl(attachmentSysId)`
**Parameters:**

- `attachmentSysId` \*

**Returns:** `*:`

---
#### `getMarkdownSource(versionID, query)`
**Parameters:**

- `versionID` string
- `query` \*

**Returns:** `GlideRecord:`

---
#### `getProjectCodeDocument(docID)`
**Parameters:**

- `docID` \*

**Returns:** `GlideRecord:`

---
#### `getProjectCodeDocumentVersion(versionID)`
**Parameters:**

- `versionID` \*

**Returns:** `GlideRecord:`

---
#### `getScriptFields(tables)`
**Parameters:**

- `tables` \*

**Returns:** `object:`

---
#### `getSourceMarkdownText(versionID)`
**Parameters:**

- `versionID` \*

**Returns:** `*:`

---
#### `initialize()`
_Initialize variables_

---
#### `loadApplicationArtifacts(versionID, customAppID)`
**Parameters:**

- `versionID` string
- `customAppID` string

**Returns:** `boolean:`

---
#### `loadUpdateSetArtifacts(versionID, updateSets)`
**Parameters:**

- `versionID` string
- `updateSets` array

**Returns:** `boolean:`

---
#### `parseSources(docGR)`
**Parameters:**

- `docGR` \*

**Returns:** `*:`

---
#### `refreshArtifacts(versionID, projectType, customAppID, updateSets)`
**Parameters:**

- `versionID` GlideRecord
- `projectType` \*
- `customAppID` \*
- `updateSets` \*

---
#### `removeApplicationArtifacts(versionID)`
**Parameters:**

- `versionID` string

---
#### `removeAttachment(gr, fileName)`
**Parameters:**

- `gr` \*
- `fileName` \*

---
#### `removeMarkdownSource(versionID, query)`
**Parameters:**

- `versionID` string
- `query` string

---
#### `_addBackToTop(sourceArray)`
**Parameters:**

- `sourceArray` \*

---
#### `_getSourceCode(sourceGR)`
**Parameters:**

- `sourceGR` \*

**Returns:** `object:`

---
#### `_log(msg)`
_Adds a message to the system log if Markdown.DEBUG is true._
**Parameters:**

- `msg` String
_Message to add to the system log._

---
#### `_logError(msg)`
_Adds an error message to the system log._
**Parameters:**

- `msg` string
_Message to add to system log._

---
#### `_logWarning(msg)`
_Adds a warning message to the system log._
**Parameters:**

- `msg` string
_Message to add to the system log._

---
&lt;/api_markdown&gt;
        &lt;html&gt;&lt;![CDATA[&lt;link href="7d34f4344feb6700ecf18c318110c729.cssdbx" rel="stylesheet" type="text/css" /&gt;
&lt;div class="content"&gt;
&lt;h2 id="a-namescript-include-markdownamarkdown"&gt;&lt;a name="script-include-markdown"&gt;&lt;/a&gt;Markdown&lt;/h2&gt;
&lt;h3 id="type-script-include"&gt;Type: &lt;code&gt;Script Include&lt;/code&gt;&lt;/h3&gt;
&lt;h3 id="class-markdown"&gt;Class: &lt;code&gt;Markdown&lt;/code&gt;&lt;/h3&gt;
&lt;h3 id="constructor"&gt;Constructor&lt;/h3&gt;
&lt;h4 id="markdown"&gt;&lt;code&gt;Markdown()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Initialize variables and such&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="static-properties"&gt;Static Properties&lt;/h3&gt;
&lt;h4 id="markdownaction_event--x_58056_md_docsmd_docsaction"&gt;&lt;code&gt;Markdown.ACTION_EVENT&lt;/code&gt; &lt;em&gt;&amp;#61; &amp;#34;x_58056_md_docs.md_docs.action&amp;#34;&lt;/em&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;h4 id="markdowndebug--true"&gt;&lt;code&gt;Markdown.DEBUG&lt;/code&gt; &lt;em&gt;&amp;#61; true&lt;/em&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;h4 id="markdownrefresh--refresh"&gt;&lt;code&gt;Markdown.REFRESH&lt;/code&gt; &lt;em&gt;&amp;#61; &amp;#34;refresh&amp;#34;&lt;/em&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;h4 id="markdownhandlemarkdownactionaction-detailsjson"&gt;&lt;code&gt;Markdown.handleMarkdownAction(action, detailsJSON)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;action&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;detailsJSON&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="markdownstartrefreshsourceactionversionid-projecttype-customappid-updatesets"&gt;&lt;code&gt;Markdown.startRefreshSourceAction(versionID, projectType, customAppID, updateSets)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;projectType&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;customAppID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;updateSets&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3 id="methods"&gt;Methods&lt;/h3&gt;
&lt;h4 id="addmarkdownsource"&gt;&lt;code&gt;addMarkdownSource&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceType&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceTable&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceScriptField&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceName&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceDescription&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;sourceText&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;addedFromApp&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="buildmarkdowntextsourcegr"&gt;&lt;code&gt;buildMarkdownText(sourceGR)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sourceGR&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="copymarkdownsourcenewversionid-oldversionid"&gt;&lt;code&gt;copyMarkdownSource(newVersionID, oldVersionID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;newVersionID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;oldVersionID&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="createpdfattachmentmarkdowngr-filename-contenttype-base64content"&gt;&lt;code&gt;createPDFAttachment(markdownGR, fileName, contentType, base64Content)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;markdownGR&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;fileName&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;contentType&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;base64Content&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="generateabstractsyntaxtreesourcegr"&gt;&lt;code&gt;generateAbstractSyntaxTree(sourceGR)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sourceGR&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;string:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getattachmentgr-filename"&gt;&lt;code&gt;getAttachment(gr, fileName)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;gr&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;fileName&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getimageurlattachmentsysid"&gt;&lt;code&gt;getImageUrl(attachmentSysId)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;attachmentSysId&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getmarkdownsourceversionid-query"&gt;&lt;code&gt;getMarkdownSource(versionID, query)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt;   String&lt;br /&gt;__&lt;/li&gt;&lt;li&gt;&lt;code&gt;query&lt;/code&gt; *&lt;br /&gt;__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;GlideRecord:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getprojectcodedocumentdocid"&gt;&lt;code&gt;getProjectCodeDocument(docID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;docID&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;GlideRecord:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getprojectcodedocumentversionversionid"&gt;&lt;code&gt;getProjectCodeDocumentVersion(versionID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;GlideRecord:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getscriptfieldstables"&gt;&lt;code&gt;getScriptFields(tables)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;tables&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;object:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="getsourcemarkdowntextversionid"&gt;&lt;code&gt;getSourceMarkdownText(versionID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="initialize"&gt;&lt;code&gt;initialize()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Initialize variables&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="loadapplicationartifactsversionid-customappid"&gt;&lt;code&gt;loadApplicationArtifacts(versionID, customAppID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;li&gt;&lt;code&gt;customAppID&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;boolean:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="loadupdatesetartifactsversionid-updatesets"&gt;&lt;code&gt;loadUpdateSetArtifacts(versionID, updateSets)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;li&gt;&lt;code&gt;updateSets&lt;/code&gt; array&lt;br /&gt;__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;boolean:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="parsesourcesdocgr"&gt;&lt;code&gt;parseSources(docGR)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;docGR&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;*:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="refreshartifactsversionid-projecttype-customappid-updatesets"&gt;&lt;code&gt;refreshArtifacts(versionID, projectType, customAppID, updateSets)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; GlideRecord&lt;br /&gt;__&lt;/li&gt;&lt;li&gt;&lt;code&gt;projectType&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;customAppID&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;updateSets&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="removeapplicationartifactsversionid"&gt;&lt;code&gt;removeApplicationArtifacts(versionID)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="removeattachmentgr-filename"&gt;&lt;code&gt;removeAttachment(gr, fileName)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;gr&lt;/code&gt; *
__&lt;/li&gt;&lt;li&gt;&lt;code&gt;fileName&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="removemarkdownsourceversionid-query"&gt;&lt;code&gt;removeMarkdownSource(versionID, query)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;versionID&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;li&gt;&lt;code&gt;query&lt;/code&gt; string&lt;br /&gt;__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="_addbacktotopsourcearray"&gt;&lt;code&gt;_addBackToTop(sourceArray)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sourceArray&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="_getsourcecodesourcegr"&gt;&lt;code&gt;_getSourceCode(sourceGR)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sourceGR&lt;/code&gt; *
__&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;object:&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id="_logmsg"&gt;&lt;code&gt;_log(msg)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Adds a message to the system log if Markdown.DEBUG is true.&lt;/em&gt;&lt;br /&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;msg&lt;/code&gt; String&lt;br /&gt;&lt;em&gt;Message to add to the system log.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="_logerrormsg"&gt;&lt;code&gt;_logError(msg)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Adds an error message to the system log.&lt;/em&gt;&lt;br /&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;msg&lt;/code&gt; string&lt;br /&gt;&lt;em&gt;Message to add to system log.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id="_logwarningmsg"&gt;&lt;code&gt;_logWarning(msg)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Adds a warning message to the system log.&lt;/em&gt;&lt;br /&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;msg&lt;/code&gt; string&lt;br /&gt;&lt;em&gt;Message to add to the system log.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;hr /&gt;

&lt;/div&gt;]]&gt;&lt;/html&gt;
        &lt;markdown_document/&gt;
        &lt;markdown_link&gt;script-include-markdown&lt;/markdown_link&gt;
        &lt;order&gt;1800&lt;/order&gt;
        &lt;project_code_document_version display_value="COD0001003"&gt;8ad67e0edbed7300d0cb5385ca961955&lt;/project_code_document_version&gt;
        &lt;remote&gt;false&lt;/remote&gt;
        &lt;remote_json/&gt;
        &lt;remote_source_id/&gt;
        &lt;show_html&gt;false&lt;/show_html&gt;
        &lt;show_markdown&gt;false&lt;/show_markdown&gt;
        &lt;source_description/&gt;
        &lt;source_id&gt;d0ee98f64f5f2300ecf18c318110c75e&lt;/source_id&gt;
        &lt;source_key/&gt;
        &lt;source_name&gt;Script Include: Markdown&lt;/source_name&gt;
        &lt;source_script_field&gt;script&lt;/source_script_field&gt;
        &lt;source_table&gt;sys_script_include&lt;/source_table&gt;
        &lt;source_text/&gt;
        &lt;source_type&gt;Document&lt;/source_type&gt;
        &lt;sys_created_by&gt;system&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-05-24 17:39:11&lt;/sys_created_on&gt;
        &lt;sys_id&gt;c7434cf6dbed3300d0cb5385ca96197f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-06-08 22:06:58&lt;/sys_updated_on&gt;
    &lt;/x_58056_md_docs_markdown_source&gt;
    &lt;sys_attachment action="INSERT_OR_UPDATE"&gt;
        &lt;average_image_color/&gt;
        &lt;chunk_size_bytes&gt;734003&lt;/chunk_size_bytes&gt;
        &lt;compressed&gt;true&lt;/compressed&gt;
        &lt;content_type&gt;application/msword&lt;/content_type&gt;
        &lt;encryption_context/&gt;
        &lt;file_name&gt;Script Include: Markdown.doc&lt;/file_name&gt;
        &lt;hash/&gt;
        &lt;image_height/&gt;
        &lt;image_width/&gt;
        &lt;size_bytes&gt;13022&lt;/size_bytes&gt;
        &lt;size_compressed&gt;2721&lt;/size_compressed&gt;
        &lt;state/&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:08:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;bbc052afdbf57300d0cb5385ca961951&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-06-08 22:08:35&lt;/sys_updated_on&gt;
        &lt;table_name&gt;x_58056_md_docs_markdown_source&lt;/table_name&gt;
        &lt;table_sys_id&gt;c7434cf6dbed3300d0cb5385ca96197f&lt;/table_sys_id&gt;
    &lt;/sys_attachment&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;H4sIAAAAAAAAAA==&lt;/data&gt;
        &lt;length&gt;16&lt;/length&gt;
        &lt;position&gt;0&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.doc" sys_id="bbc052afdbf57300d0cb5385ca961951"&gt;bbc052afdbf57300d0cb5385ca961951&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:08:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;fbc052afdbf57300d0cb5385ca961951&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;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&lt;/data&gt;
        &lt;length&gt;3616&lt;/length&gt;
        &lt;position&gt;1&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.doc" sys_id="bbc052afdbf57300d0cb5385ca961951"&gt;bbc052afdbf57300d0cb5385ca961951&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:08:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7fc052afdbf57300d0cb5385ca961951&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
    &lt;sys_attachment action="INSERT_OR_UPDATE"&gt;
        &lt;average_image_color/&gt;
        &lt;chunk_size_bytes&gt;734003&lt;/chunk_size_bytes&gt;
        &lt;compressed&gt;true&lt;/compressed&gt;
        &lt;content_type&gt;application/html&lt;/content_type&gt;
        &lt;encryption_context/&gt;
        &lt;file_name&gt;Script Include: Markdown.html&lt;/file_name&gt;
        &lt;hash/&gt;
        &lt;image_height/&gt;
        &lt;image_width/&gt;
        &lt;size_bytes&gt;12719&lt;/size_bytes&gt;
        &lt;size_compressed&gt;2581&lt;/size_compressed&gt;
        &lt;state/&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:07:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0ea09a2fdbf57300d0cb5385ca9619d8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-06-08 22:07:56&lt;/sys_updated_on&gt;
        &lt;table_name&gt;x_58056_md_docs_markdown_source&lt;/table_name&gt;
        &lt;table_sys_id&gt;c7434cf6dbed3300d0cb5385ca96197f&lt;/table_sys_id&gt;
    &lt;/sys_attachment&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;H4sIAAAAAAAAAA==&lt;/data&gt;
        &lt;length&gt;16&lt;/length&gt;
        &lt;position&gt;0&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.html" sys_id="0ea09a2fdbf57300d0cb5385ca9619d8"&gt;0ea09a2fdbf57300d0cb5385ca9619d8&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:07:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4ea09a2fdbf57300d0cb5385ca9619d8&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;zRtpb9s49nuA/geui9nJFlHi+FrXdY1x07STxaZTxGn3w2IR0BJts5FElaTjeAb97/t46JbspHHaTAayRb774ns0OlzIwB8NFwR7o6GQa5+M1Ar669kegv9c5jM+QM/b7farZ3vfnu0925sybx1vz1goB+i4Hd0eHR92UON34t8QSV3cOECNMafYhy8Ch8IRhNPZqxTLWRE6XwByyHiAfbvj05A4C7sDFGOeWiTN2GUeiblPGfcIdzj26FIMEEhRho84QaMcVoQ9j4bzAWpapgHmcxqm71o8Qf8ksHTY75IA/Y0GEeMSh9KCrICzM+UEXxcUWC2oJI6IsAvYwNsuT7F7PedsGXoDJDnYI8KcJNSMHgUBZjig/nqAzknoswN0zkLswucJCwXzsQD7nrAlp4SjD2QFVg5YyDRfY4O8BZT+B8VFKWOTeFREPgZmNFQeSOxy66yoJxdqnUqaKLnVguyG8JnPVkXEnHtpuICYyFl0xXFUMGhqOcfG4o+xX5UFB1MyY7zKkHU7GgvPJOFVSHojzbRQkrCYELtR5dASL6cAajWjW/XR1clTk/I2fK6nHjwjrafAQZStAnVCNt6SL/jzEk3AaWqRqcrwhkohIXsC9JlwnN/Lq2Lf8joVkvRl67Dd7P9SXULa3cSf7UIhyJWhKfO9SgPcNQizAjV/KWZKC6zcSUy8owA9VkHVUo+2enTUo6sevWL59l72u61/VnFvXHIyXboLItH5ZGuxzlipYOfjQimAFSicTaigUEBLdaMQdkadVs4xxpTH/c5h75eiY5qd476b8WsFXrd92O+UMEmnj1vTlOMm28VVJWRJRSwJsMlAktxKxyMu41hSFiaEDOtuwiZzNDyfvVR/ubLmJLLP1F9Bkm63W46/4+Mk0hKTw+GIeslyrBsAIog26uVZ5k/UnFuV36qc14XkAocX24ZuzyPpKd6rVro5O571q5X2Ol6fTL9X6rKVauyxVb1OVe14yiXv3uG6rcaldii7eVsU3r9NNNx4odOL+XV6vf7LQpro3nVQFRe2hzkueNuRLFLmSuuTXZ8yKVkAW3pDSxLVn5ztTNsZVSdBepAqAAgDFs6rgUqhlW+SstZtJodMRaG6b03KqJao30rs9R2lPukopz5zr7Pql7KopE/aTaJymKF7ROsyGWN8KmQSIV+XmBeULvszEw8+mYHerTQafKroxl/v1lTkK547m85wXVXTpZ4Qryxi+04dxNOrP2kCgEvAZOUc6fV6tRUkaUH/60JfJF68bvg4nC/xnDiN/5mGtGqnPsOyvigmTWzTTBv2bzolJl9ii1mD11pKpxn26RyiWEXP5uFQjz5qVXs5P07Wzpk141LFAG02nID96Ug8taaNj1uHVSzmVyzgikyvqXQW62hBQpEznKZdvSEq14tr2sO/BcSjGOxC00ElHZnsQnXuP5/N4sboWxFRd8mFpVZ5qV1e6pSXuuWlXla0WJ5mM55FTQZDQGovOnrkGyB8w5JTqiSxLplfl0ySKtJdV/3V4arJ8q9KzjQUFIbRzazB836OQFLH9U4dGg3mlUhx8Y83MjcKmXof7yRhm25V6VdyQbb8FnLDqK4WMrxq0vCbjsO94ZG5BRse6TuxvaHiMRp69AbpIvP6VztM/wp7MLNQ73UDOyEOiHA5jSQY2vWXHnHg9Lj22Ap27JfGaIiRAnzdqAEFiCM8OrdvIEFL8WhrHnIdgdA5vMboEhYHaKgsMJroPXRm9oZHehFotFMaWoEMtxP1HuOnbKswoRxKvnQl44CWvsRQHQ2V0SNHcv8fKdEOgEejIQlGZ+ZuCAoNusHQBEKAieERbAyPopSzkFB6XSfiLCJcUiIao4leQh+TpWopsKtq9hW5AWc5zu1Vt9/s9q4C78pjrrAfBqYo7+H45PLsjw9Xp59PP1xa0ZES+TX6u0rMVwVih/GnIWdgrCpa4QUvi+fB3D13HDAkKfF/e/rm0/s8YwW3jSQnM07EwnHslxLdi9N3F6eT36tUsih3k32BQ88neUObJ3SXElNffBEVZjVo8etYI+wbvANkEf81+eNDOVxM0zz6iDnkD5RQMVB5qtdMtCx9ePjUcjQ0YzVfDI9gJ7OdYVWEOdKEqnSGQOTSWknAye8Sw+UGpIEP6qkY/UJcqTPVXQroonEUwfoy8rAkgkhRsogmemGITjRRaxVL9eztAbJkVa4fIEN3HEVqxxCeAOEHWyzhFxsEYKEfKVouI8tmwIycmwFTHSrhsv4wBQG0WTAPTHluvuSTH5rlxGHanrHJYSO2ujH0zi1WCjMjQNZWdSCq9m2B2crH1P93lPjeFsgPoN8WkLf2NNuURVZ26HVrQcDoxHvHdSBsz7TpkvqJ91QPbTjMeexDDRB7UTHeNxDvLx4c/zGhailTehdELnmYIWZPzxeDRIKooJbLonU+JkOySqsGzIjJS6yoQslH6z7gfE5rAiAlbw/WPUu61pVZjttd6ULjJeF/id1FAOdvrP+cOzPqE9UFObaPMuXSfE/01+jjBH0/xn9/cYAUARXCB/FvJrYympcHWyNlVWuLWIJagIxg22AeIeDmEGBcmX8KKHBIiXUo8S2cXaSYUDHk2EJONOQlQD6dzDLHwSZtZRpnmfhKdZSZQJrzNIAerNqc3ztEduJeaWPHFaKg6YnZOJlM9sNdaBg+mgo0gNl0yf3Ud2It0goIEGcK4hP391OQyVqceQ/vDvP0Hke/fMVPy/3XJeHrjJaFMp/p+zTkj2rsNLPvtcR7n3rkQl0rexttYrtHBQDj0lJ5AD5zTv9oQE7g9a0F2QeYHZxymspP0NA6oHTGVytrz9g0DnYfAI+lu+kYZ6oBFfq6SGRUzXSnYt/sPlgzaa8Mvk8tNlW236yRzslsR1rlRZO5ubb0CXlvQ5WiyQVMrE268n1XNhniPsMejL8+dfXVOYy5dKZ6kbQSZkbkmL9CGqdI4xgpWxYzk+WPKo7bhtm7+mLKmE9wWO8RpX9yW1BhsvJNgsL4FI/Qlfb68ZcE5ZEec47XuzZWhLmwHa2AYpt2tXrDZKVQh8cOmlhN5RFS0N4nVbj67pdJlkal83/O3VHmxLjDBVJ5MiqnWwmmHGP1wygnAbshG4tRaksFurkEPXIa1cq/acixcj+1OaesxZ3aYgP6FDvjLZ66wp6nfp6UTLLIXhKr0hcrpvbfwP4lu2SRHbHHCmBHU/bY1NltrrhKehsFWbwUuEp6GtWYPp2LgG0N25XP5oGYJ2rA6z68VzYyY88TCKOACAFDJpIMyQVBMIFKEiBARHSG8r/GICr0bzCHpt+Z8vtfLIl5rPrEhJEiAsTOUykgPsrCWJa13gQQwjnjBeVP1doWC4RIY9YbYifqii3q3kvVFeYhUCso+x+zus3hFvkn63sn98J3j97AuvkB+kj/Q43/AzPC+HmvMQAA&lt;/data&gt;
        &lt;length&gt;3428&lt;/length&gt;
        &lt;position&gt;1&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.html" sys_id="0ea09a2fdbf57300d0cb5385ca9619d8"&gt;0ea09a2fdbf57300d0cb5385ca9619d8&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-08 22:07:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;cea09a2fdbf57300d0cb5385ca9619d8&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
    &lt;sys_attachment action="INSERT_OR_UPDATE"&gt;
        &lt;average_image_color/&gt;
        &lt;chunk_size_bytes&gt;734003&lt;/chunk_size_bytes&gt;
        &lt;compressed&gt;true&lt;/compressed&gt;
        &lt;content_type&gt;application/pdf&lt;/content_type&gt;
        &lt;encryption_context/&gt;
        &lt;file_name&gt;Script Include: Markdown.pdf&lt;/file_name&gt;
        &lt;hash/&gt;
        &lt;image_height/&gt;
        &lt;image_width/&gt;
        &lt;size_bytes&gt;27752&lt;/size_bytes&gt;
        &lt;size_compressed&gt;5558&lt;/size_compressed&gt;
        &lt;state/&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-16 23:37:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;15dab9f1db133300d0cb5385ca961979&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-08-16 23:37:23&lt;/sys_updated_on&gt;
        &lt;table_name&gt;x_58056_md_docs_markdown_source&lt;/table_name&gt;
        &lt;table_sys_id&gt;c7434cf6dbed3300d0cb5385ca96197f&lt;/table_sys_id&gt;
    &lt;/sys_attachment&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;H4sIAAAAAAAAAA==&lt;/data&gt;
        &lt;length&gt;16&lt;/length&gt;
        &lt;position&gt;0&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.pdf" sys_id="15dab9f1db133300d0cb5385ca961979"&gt;15dab9f1db133300d0cb5385ca961979&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-16 23:37:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;55dab9f1db133300d0cb5385ca961979&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
    &lt;sys_attachment_doc action="INSERT_OR_UPDATE"&gt;
        &lt;data&gt;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&lt;/data&gt;
        &lt;length&gt;7400&lt;/length&gt;
        &lt;position&gt;1&lt;/position&gt;
        &lt;sys_attachment display_value="Script Include: Markdown.pdf" sys_id="15dab9f1db133300d0cb5385ca961979"&gt;15dab9f1db133300d0cb5385ca961979&lt;/sys_attachment&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-16 23:37:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;d5dab9f1db133300d0cb5385ca961979&lt;/sys_id&gt;
    &lt;/sys_attachment_doc&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-05 21:36:14</sys_created_on>
        <sys_id>f60615562fe7991448dca1fef699b616</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Script Include: Markdown</sys_name>
        <sys_package display_value="Markdown Documents" source="x_58056_md_docs">7ac0b5344f212300ecf18c318110c745</sys_package>
        <sys_policy/>
        <sys_scope display_value="Markdown Documents">7ac0b5344f212300ecf18c318110c745</sys_scope>
        <sys_update_name>sys_metadata_link_f60615562fe7991448dca1fef699b616</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-05 21:36:14</sys_updated_on>
        <tablename>x_58056_md_docs_markdown_source</tablename>
    </sys_metadata_link>
</record_update>
