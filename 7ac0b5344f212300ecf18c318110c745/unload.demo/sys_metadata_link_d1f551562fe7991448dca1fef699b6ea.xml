<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>unload.demo</directory>
        <documentkey>c3b2d7e04f40b700ecf18c318110c74b</documentkey>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="x_58056_md_docs_markdown_source">
    <x_58056_md_docs_markdown_source action="INSERT_OR_UPDATE">
        <abstract_syntax_tree>{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "Markdown"
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Class"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": []
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "DEBUG"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "REFRESH"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "refresh",
                    "raw": "\"refresh\""
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "ACTION_EVENT"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "x_58056_md_docs.md_docs.action",
                    "raw": "\"x_58056_md_docs.md_docs.action\""
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "startRefreshSourceAction"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "docID"
                        },
                        {
                            "type": "Identifier",
                            "name": "projectType"
                        },
                        {
                            "type": "Identifier",
                            "name": "customAppID"
                        },
                        {
                            "type": "Identifier",
                            "name": "updateSets"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "details"
                                        },
                                        "init": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "projectType"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "projectType"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "customAppID"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "customAppID"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "updateSets"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "updateSets"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "gs"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "eventQueue"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "Markdown"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "ACTION_EVENT"
                                            }
                                        },
                                        {
                                            "type": "Literal",
                                            "value": null,
                                            "raw": "null"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "Markdown"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "REFRESH"
                                            }
                                        },
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "JSON"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "stringify"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "details"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "handleMarkdownAction"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "action"
                        },
                        {
                            "type": "Identifier",
                            "name": "detailsJSON"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "details"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "JSON"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "parse"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "detailsJSON"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "action"
                                    },
                                    "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Markdown"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "REFRESH"
                                        }
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "Markdown"
                                                        },
                                                        "arguments": []
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "refreshArtifacts"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "details"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "docID"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "details"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "projectType"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "details"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "customAppID"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "details"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "updateSets"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Markdown"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "ObjectExpression",
                    "properties": [
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "initialize"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "maxImageBytes"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "1"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 1024,
                                                            "raw": "1024"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 1024,
                                                        "raw": "1024"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getAttachment"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "gr"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "fileName"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "sys_attachment",
                                                                "raw": "\"sys_attachment\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "table_name",
                                                        "raw": "\"table_name\""
                                                    },
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gr"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getRecordClassName"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "table_sys_id",
                                                        "raw": "\"table_sys_id\""
                                                    },
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gr"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getUniqueValue"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "file_name",
                                                        "raw": "\"file_name\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "fileName"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "attGR"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getImageUrl"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "attachmentSysId"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "nil"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "attachmentSysId"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "\"\""
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "sys_attachment",
                                                                "raw": "\"sys_attachment\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "attGR"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "get"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "attachmentSysId"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "\"\""
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "base64Image"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "String"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GlideSysAttachment"
                                                                        },
                                                                        "arguments": []
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "getContentBase64"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "attGR"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "imageSize"
                                                    },
                                                    "init": {
                                                        "type": "BinaryExpression",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "base64Image"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 3,
                                                                "raw": "3"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 4,
                                                            "raw": "4"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "&gt;",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "imageSize"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "maxImageBytes"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "Image size is greater than ",
                                                                                "raw": "\"Image size is greater than \""
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "maxImageBytes"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": " for SYSID ",
                                                                            "raw": "\" for SYSID \""
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "attachmentSysId"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "\"\""
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "data:image/png;base64,",
                                                    "raw": "\"data:image/png;base64,\""
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "base64Image"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "removeAttachment"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "gr"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "fileName"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "attGR"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getAttachment"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "gr"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "fileName"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "attGR"
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "GlideSysAttachment"
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "deleteAttachment"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "attGR"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "getUniqueValue"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "createPDFAttachment"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "markdownGR"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "fileName"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "contentType"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "base64Content"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "binData"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "base64Decode"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "base64Content"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "att_id"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GlideSysAttachment"
                                                                },
                                                                "arguments": []
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "write"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "markdownGR"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "fileName"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "contentType"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "binData"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "att_id"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "buildAPIMarkdown"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "sourceGR"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "md"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": "",
                                                        "raw": "\"\""
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceDetails"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_getSourceCode"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "sourceGR"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "sourceDetails"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "code"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "md"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "JavadocToMarkdown"
                                                                        },
                                                                        "arguments": []
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "fromJSDoc"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceDetails"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "code"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 2,
                                                                        "raw": "2"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceDetails"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "name"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceDetails"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "description"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "md"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "generateAbstractSyntaxTree"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "sourceGR"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "ast"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": "",
                                                        "raw": "\"\""
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceDetails"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_getSourceCode"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "sourceGR"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "sourceDetails"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "code"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "ast"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "esprima"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "parseScript"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceDetails"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "code"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "JSON"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "stringify"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "ast"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": null,
                                                        "raw": "null"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "    ",
                                                        "raw": "\"    \""
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "_getSourceCode"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "sourceGR"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceDetails"
                                                    },
                                                    "init": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "\"\""
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "description"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "\"\""
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "code"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": null,
                                                                    "raw": "null"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "source_type"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "Document",
                                                    "raw": "\"Document\""
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "sourceGR"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "source_id"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "nil"
                                                                }
                                                            },
                                                            "arguments": []
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "sourceDetails"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "gr"
                                                                },
                                                                "init": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "GlideRecord"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "source_table"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "fieldName"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "source_script_field"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&amp;&amp;",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "gr"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "get"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceGR"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "source_id"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "gr"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isValidField"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "fieldName"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceDetails"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "code"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "gr"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "getValue"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "fieldName"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceDetails"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "name"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "gr"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceDetails"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "description"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "gr"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "description"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceDetails"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "code"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceGR"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "source_text"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toString"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceDetails"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceGR"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "source_name"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toString"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceDetails"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "description"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sourceGR"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "source_description"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toString"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "sourceDetails"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "refreshArtifacts"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "projectType"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "customAppID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "updateSets"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "mdGR"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getMarkdownDocument"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "docID"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "mdGR"
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "Markdown document not found. ID=",
                                                                        "raw": "\"Markdown document not found. ID=\""
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "docID"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getMarkdownSource"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "docID"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "added_from_application=true",
                                                                "raw": "\"added_from_application=true\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deleteMultiple"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "projectType"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "projectType"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "Manual",
                                                        "raw": "\"Manual\""
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "projectType"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "Custom application",
                                                    "raw": "\"Custom application\""
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "loadApplicationArtifacts"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "docID"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "customAppID"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "projectType"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "Update sets",
                                                        "raw": "\"Update sets\""
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "loadUpdateSetArtifacts"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "docID"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "updateSets"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": null
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "mdGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "source_refreshed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "GlideDateTime"
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "mdGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "update"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "removeApplicationArtifacts"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "removeMarkdownSource"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "added_from_application=true",
                                                        "raw": "\"added_from_application=true\""
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "loadApplicationArtifacts"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "customAppID"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "nil"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "customAppID"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "Application missing",
                                                                    "raw": "\"Application missing\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "appClasses"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getProperty"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs.documented_application_classes",
                                                                "raw": "\"x_58056_md_docs.documented_application_classes\""
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "appClasses"
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "Application classes property is missing",
                                                                    "raw": "\"Application classes property is missing\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "appClasses"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "appClasses"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "split"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ",",
                                                            "raw": "\",\""
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "fields"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getScriptFields"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "appClasses"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "metaGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "sys_metadata",
                                                                "raw": "\"sys_metadata\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "metaGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "sys_scope",
                                                        "raw": "\"sys_scope\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "customAppID"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "metaGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "sys_class_name",
                                                        "raw": "\"sys_class_name\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "appClasses"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "metaGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "metaGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "table"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "metaGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "sys_class_name"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "sysID"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "metaGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "sys_id"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "in",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "table"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "fields"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "fields"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "table"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "forEach"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "field"
                                                                                    }
                                                                                ],
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "addMarkdownSource"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "docID"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": "Document",
                                                                                                        "raw": "\"Document\""
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "table"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "sysID"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "field"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": true,
                                                                                                        "raw": "true"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "generator": false,
                                                                                "expression": false,
                                                                                "async": false
                                                                            },
                                                                            {
                                                                                "type": "ThisExpression"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "loadUpdateSetArtifacts"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "updateSets"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "updateSets"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "updateSets"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "Update sets missing",
                                                                    "raw": "\"Update sets missing\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "appClasses"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getProperty"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs.documented_application_classes",
                                                                "raw": "\"x_58056_md_docs.documented_application_classes\""
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "appClasses"
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "Application classes property is missing",
                                                                    "raw": "\"Application classes property is missing\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "appClasses"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "appClasses"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "split"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ",",
                                                            "raw": "\",\""
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "fields"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getScriptFields"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "appClasses"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "suxGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "sys_update_xml",
                                                                "raw": "\"sys_update_xml\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "suxGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "update_set",
                                                        "raw": "\"update_set\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "updateSets"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "suxGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "action",
                                                        "raw": "\"action\""
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "INSERT_OR_UPDATE",
                                                        "raw": "\"INSERT_OR_UPDATE\""
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "appClasses"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "forEach"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "table"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "idx"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "==",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "idx"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "suxGR"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "addQuery"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "name",
                                                                                            "raw": "\"name\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "STARTSWITH",
                                                                                            "raw": "\"STARTSWITH\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "table"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "suxGR"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "addOrCondition"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "name",
                                                                                            "raw": "\"name\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "STARTSWITH",
                                                                                            "raw": "\"STARTSWITH\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "table"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    {
                                                        "type": "ThisExpression"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "suxGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "suxGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "table"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "suxGR"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "substr"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        },
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "suxGR"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "name"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "toString"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "lastIndexOf"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "_",
                                                                                    "raw": "\"_\""
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "sysID"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "suxGR"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "substr"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "suxGR"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "name"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "toString"
                                                                                            }
                                                                                        },
                                                                                        "arguments": []
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "lastIndexOf"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "_",
                                                                                        "raw": "\"_\""
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "1"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "in",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "table"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "fields"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "fields"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "table"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "forEach"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "field"
                                                                                    }
                                                                                ],
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "addMarkdownSource"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "docID"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": "Document",
                                                                                                        "raw": "\"Document\""
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "table"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "sysID"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "field"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": null,
                                                                                                        "raw": "null"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": true,
                                                                                                        "raw": "true"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "generator": false,
                                                                                "expression": false,
                                                                                "async": false
                                                                            },
                                                                            {
                                                                                "type": "ThisExpression"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getScriptFields"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "tables"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "fields"
                                                    },
                                                    "init": {
                                                        "type": "ObjectExpression",
                                                        "properties": []
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "dictGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "sys_dictionary",
                                                                "raw": "\"sys_dictionary\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "dictGR"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "addQuery"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "internal_type",
                                                                        "raw": "\"internal_type\""
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "script_server",
                                                                        "raw": "\"script_server\""
                                                                    }
                                                                ]
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "addOrCondition"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "internal_type",
                                                                "raw": "\"internal_type\""
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "script",
                                                                "raw": "\"script\""
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addOrCondition"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "internal_type",
                                                        "raw": "\"internal_type\""
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "script_plain",
                                                        "raw": "\"script_plain\""
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "dictGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "name",
                                                        "raw": "\"name\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tables"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "dictGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "dictGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "in",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "dictGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "name"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "fields"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "fields"
                                                                            },
                                                                            "property": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "dictGR"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "name"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "toString"
                                                                                    }
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "fields"
                                                                    },
                                                                    "property": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dictGR"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "name"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "toString"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "dictGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "element"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "fields"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getMarkdownDocument"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "mdGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs_markdown_document",
                                                                "raw": "\"x_58056_md_docs_markdown_document\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&amp;&amp;",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "nil"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "docID"
                                                            }
                                                        ]
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "mdGR"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "get"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "docID"
                                                        }
                                                    ]
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "mdGR"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getMarkdownSource"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "query"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs_markdown_source",
                                                                "raw": "\"x_58056_md_docs_markdown_source\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "markdown_document",
                                                        "raw": "\"markdown_document\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addEncodedQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "sourceGR"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "removeMarkdownSource"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "query"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs_markdown_source",
                                                                "raw": "\"x_58056_md_docs_markdown_source\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "markdown_document",
                                                        "raw": "\"markdown_document\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addEncodedQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deleteMultiple"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_log"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "getRowCount"
                                                                }
                                                            },
                                                            "arguments": []
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": " Markdown Source records deleted.",
                                                            "raw": "\" Markdown Source records deleted.\""
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "addMarkdownSource"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceType"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceTable"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceID"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceScriptField"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceName"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceDescription"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sourceText"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "addedFromApp"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "nil"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_logError"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "Document ID is missing",
                                                                    "raw": "\"Document ID is missing\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "nil"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "sourceType"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "sourceType"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "Document",
                                                                "raw": "\"Document\""
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "nil"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "sourceTable"
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "gs"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "nil"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "sourceID"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceScriptField"
                                                        }
                                                    ]
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&amp;&amp;",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "gs"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "nil"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "sourceName"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "gs"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "nil"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "sourceText"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_logError"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "Required attributes missing",
                                                                                "raw": "\"Required attributes missing\""
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "addedFromApp"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": false,
                                                                            "raw": "false"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "nil"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "addedFromApp"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "addedFromApp"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": false,
                                                                "raw": "false"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs_markdown_source",
                                                                "raw": "\"x_58056_md_docs_markdown_source\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "initialize"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "markdown_document"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "docID"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "source_type"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "sourceType"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceTable"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_table"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceTable"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceID"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_id"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceID"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceScriptField"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_script_field"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceScriptField"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "added_from_application"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "addedFromApp"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceName"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_name"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceName"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceText"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_text"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceText"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "gs"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "nil"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sourceDescription"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceGR"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "source_description"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceDescription"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "insert"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "parseSources"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docGR"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "md"
                                                    },
                                                    "init": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sources"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getSourceAPIMarkdown"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "docGR"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "getUniqueValue"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "md"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "# ",
                                                            "raw": "\"# \""
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "docGR"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "short_description"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sources"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "forEach"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "sourceMD"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "md"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "push"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "sourceMD"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    {
                                                        "type": "ThisExpression"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "md"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "join"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "\n\n",
                                                        "raw": "\"\\n\\n\""
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "getSourceAPIMarkdown"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "docID"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceMD"
                                                    },
                                                    "init": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "GlideRecord"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x_58056_md_docs_markdown_source",
                                                                "raw": "\"x_58056_md_docs_markdown_source\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "markdown_document",
                                                        "raw": "\"markdown_document\""
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "docID"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "addNotNullQuery"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "api_markdown",
                                                        "raw": "\"api_markdown\""
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "orderBy"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "order",
                                                        "raw": "\"order\""
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "query"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "sourceGR"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sourceMD"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "sourceGR"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "api_markdown"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "sourceMD"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "_logError"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "msg"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "error"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "[",
                                                                    "raw": "\"[\""
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "type"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "] ",
                                                                "raw": "\"] \""
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "_logWarning"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "msg"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "gs"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "warn"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "[",
                                                                    "raw": "\"[\""
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "type"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "] ",
                                                                "raw": "\"] \""
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "_log"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "msg"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Markdown"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "DEBUG"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "gs"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "info"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "[",
                                                                                "raw": "\"[\""
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "type"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "] ",
                                                                            "raw": "\"] \""
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        },
                        {
                            "type": "Property",
                            "key": {
                                "type": "Identifier",
                                "name": "type"
                            },
                            "computed": false,
                            "value": {
                                "type": "Literal",
                                "value": "Markdown",
                                "raw": "\"Markdown\""
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        }
                    ]
                }
            }
        }
    ],
    "sourceType": "script"
}</abstract_syntax_tree>
        <added_manually>false</added_manually>
        <api_markdown>## Markdown

### `Markdown = Class.create()`

 * **Alias:** Markdown

### `Markdown.DEBUG = true`

### `Markdown.REFRESH = "refresh"`

### `Markdown.ACTION_EVENT = "x_58056_md_docs.md_docs.action"`

### `function(docID, projectType, customAppID, updateSets)`

Markdown.startRefreshSourceAction

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 
| `projectType`  |  `string`  |   | 
| `customAppID`  |  `string`  |   | 
| `updateSets`  |  `string`  |   | 


### `Markdown.ACTION_EVENT, null, Markdown.REFRESH, JSON.stringify(details))`

### `function(action, detailsJSON)`

Markdown.handleMarkdownAction

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `action`  |  `string`  |   | 
| `detailsJSON`  |  `string`  |   | 


### `Markdown.REFRESH)`

### `initialize: function()`

Initialize variables

### `getAttachment: function(gr, fileName)`

getAttachment

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `gr`  |  `string`  |   | 
| `fileName`  |  `string`  |   | 

**Returns**
 `string` — 


### `getImageUrl: function(attachmentSysId)`

getImageUrl

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `attachmentSysId`  |  `string`  |   | 

**Returns**
 `string` — 


### `removeAttachment: function(gr, fileName)`

removeAttachment

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `gr`  |  `string`  |   | 
| `fileName`  |  `string`  |   | 


### `createPDFAttachment: function(markdownGR, fileName, contentType, base64Content)`

createPDFAttachment

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `markdownGR`  |  `string`  |   | 
| `fileName`  |  `string`  |   | 
| `contentType`  |  `string`  |   | 
| `base64Content`  |  `string`  |   | 

**Returns**
 `string` — 


### `buildAPIMarkdown: function(sourceGR)`

### `generateAbstractSyntaxTree: function(sourceGR)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `sourceGR`  |  `*`  |   | 

**Returns**
 `string` — 


### `_getSourceCode: function(sourceGR)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `sourceGR`  |  `*`  |   | 

**Returns**
 `object` — 


### `refreshArtifacts: function(docID, projectType, customAppID, updateSets)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `GlideRecord`  |   | 


### `removeApplicationArtifacts: function(docID)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 


### `loadApplicationArtifacts: function(docID, customAppID)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 
| `customAppID`  |  `string`  |   | 

**Returns**
 `boolean` — 


### `function(field)`

Self invoking

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `field`  |  `string`  |   | 


### `loadUpdateSetArtifacts: function(docID, updateSets)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 
| `updateSets`  |  `array`  |   | 

**Returns**
 `boolean` — 


### `function(table, idx)`

Self invoking

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `table`  |  `string`  |   | 
| `idx`  |  `string`  |   | 


### `function(field)`

Self invoking

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `field`  |  `string`  |   | 


### `getScriptFields: function(tables)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `tables`  |  `*`  |   | 

**Returns**
 `object` — 


### `getMarkdownDocument: function(docID)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `*`  |   | 

**Returns**
 `GlideRecord` — 


### `getMarkdownSource: function(docID, query)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 

**Returns**
 `GlideRecord` — 


### `removeMarkdownSource: function(docID, query)`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `string`  |   | 
| `query`  |  `string`  |   | 


### `addMarkdownSource: function(  docID,  sourceType,  sourceTable,  sourceID,  sourceScriptField,  sourceName,  sourceDescription,  sourceText,  addedFromApp  )`

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `docID`  |  `*`  |   | 
| `sourceType`  |  `*`  |   | 
| `sourceTable`  |  `*`  |   | 
| `sourceID`  |  `*`  |   | 
| `sourceScriptField`  |  `*`  |   | 
| `sourceName`  |  `*`  |   | 
| `sourceDescription`  |  `*`  |   | 
| `sourceText`  |  `*`  |   | 
| `addedFromApp`  |  `*`  |   | 


### `parseSources: function(docGR)`

### `function(sourceMD)`

Self invoking

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `sourceMD`  |  `string`  |   | 


### `getSourceAPIMarkdown: function(docID)`

### `_logError: function(msg)`

Adds an error message to the system log.

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `msg`  |  `string`  |  Message to add to system log. | 


### `_logWarning: function(msg)`

Adds a warning message to the system log.

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `msg`  |  `string`  |  Message to add to the system log. | 


### `_log: function(msg)`

Adds a message to the system log if Markdown.DEBUG is true.

**Parameters**

| Name | Type | Description |
| --- | --- | --- |
| `msg`  |  `String`  |  Message to add to the system log. | 

</api_markdown>
        <html/>
        <markdown_document display_value="KB0010043 v0.01">31bb13674f322300ecf18c318110c77e</markdown_document>
        <markdown_link/>
        <order/>
        <project_code_document_version/>
        <remote>false</remote>
        <remote_json/>
        <remote_source_id/>
        <show_html>false</show_html>
        <show_markdown>false</show_markdown>
        <source_description/>
        <source_id>d0ee98f64f5f2300ecf18c318110c75e</source_id>
        <source_key/>
        <source_name/>
        <source_script_field>script</source_script_field>
        <source_table>sys_script_include</source_table>
        <source_text/>
        <source_type>Document</source_type>
        <sys_created_by>system</sys_created_by>
        <sys_created_on>2019-03-04 19:24:58</sys_created_on>
        <sys_id>c3b2d7e04f40b700ecf18c318110c74b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2019-03-04 19:24:58</sys_updated_on>
    </x_58056_md_docs_markdown_source>
</record_update>
]]></payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-05 21:35:51</sys_created_on>
        <sys_id>d1f551562fe7991448dca1fef699b6ea</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Markdown Documents" source="x_58056_md_docs">7ac0b5344f212300ecf18c318110c745</sys_package>
        <sys_policy/>
        <sys_scope display_value="Markdown Documents">7ac0b5344f212300ecf18c318110c745</sys_scope>
        <sys_update_name>sys_metadata_link_d1f551562fe7991448dca1fef699b6ea</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-05 21:35:51</sys_updated_on>
        <tablename>x_58056_md_docs_markdown_source</tablename>
    </sys_metadata_link>
</record_update>
